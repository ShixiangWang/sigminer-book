[{"path":"index.html","id":"introduction","chapter":"📖 Introduction","heading":"📖 Introduction","text":"\n\n\n","code":""},{"path":"index.html","id":"motivation","chapter":"📖 Introduction","heading":"🎯 Motivation","text":"book written guide extracting, analyzing visualizing mutational signatures R/CRAN package sigminer. README Reference list sigminer given users overview details specific points (e.g., functions) sigminer. book help users focus quickly getting mutational signature analysis done make life easy.book, assume already known operate R.","code":""},{"path":"index.html","id":"citation","chapter":"📖 Introduction","heading":"📝 Citation","text":"use sigminer pipeline version sigflow published research, please cite appropriate paper(s):Wang, S., Li, H., Song, M., Tao, Z., Wu, T., , Z., … & Liu, X. S. (2021). Copy number signature analysis tool application prostate cancer reveals distinct mutational processes clinical outcomes. PLoS genetics, 17(5), e1009557. https://doi.org/10.1371/journal.pgen.1009557Wang, S., Tao, Z., Wu, T., & Liu, X. S. (2021). Sigflow: automated comprehensive pipeline cancer genome mutational signature analysis. Bioinformatics, 37(11), 1590-1592. https://doi.org/10.1093/bioinformatics/btaa895Please properly cite following references using \ncorresponding features. references also listed function\ndocumentation. thanks works, sigminer created\nwithout giants.Mayakonda, Anand, et al. “Maftools: efficient comprehensive\nanalysis somatic variants cancer.” Genome research 28.11\n(2018): 1747-1756.Gaujoux, Renaud, Cathal Seoighe. “Flexible R Package \nNonnegative Matrix Factorization.”” BMC Bioinformatics 11, . 1\n(December 2010).Wickham, Hadley. “ggplot2.” Wiley Interdisciplinary Reviews: Computational Statistics 3.2 (2011): 180-185.Kim, Jaegil, et al. “Somatic ERCC2 mutations associated \ndistinct genomic signature urothelial tumors.” Nature Genetics\n48.6 (2016): 600.Alexandrov, Ludmil B., et al. “Deciphering signatures mutational\nprocesses operative human cancer.” Cell Reports 3.1 (2013):\n246-259.Degasperi, Andrea, et al. “practical framework online tool \nmutational signature analyses show intertissue variation driver\ndependencies.” Nature Cancer 1.2 (2020): 249-263.Alexandrov, Ludmil B., et al. “repertoire mutational\nsignatures human cancer.” Nature 578.7793 (2020): 94-101.Macintyre, Geoff, et al. “Copy number signatures mutational\nprocesses ovarian carcinoma.” Nature Genetics 50.9 (2018): 1262.Tan, Vincent YF, Cédric Févotte. “Automatic relevance\ndetermination nonnegative matrix factorization /spl\nbeta/-divergence.” IEEE Transactions Pattern Analysis Machine Intelligence 35.7 (2012): 1592-1605.Bergstrom EN, Huang MN, Mahto U, Barnes M, Stratton MR, Rozen SG,\nAlexandrov LB: SigProfilerMatrixGenerator: tool visualizing\nexploring patterns small mutational events. BMC Genomics\n2019, 20:685\nhttps://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-019-6041-2","code":""},{"path":"index.html","id":"book-structure","chapter":"📖 Introduction","heading":"📚 Book structure","text":"Part 1 (Background Prerequisite) describes basic concepts mutational signature install/load sigminer.Part 2 (Workflows) introduces prepare input data run mutational signature analysis different mutation data types (SBS, DBS, INDEL, Genome rearrangement, CNV) different methods provided sigminer.Part 3 (Miscellaneous topics) describes useful utilities including builtin datasets, SBS signature conversion.","code":""},{"path":"index.html","id":"want-to-help","chapter":"📖 Introduction","heading":"💖 Want to help?","text":"book’s source code hosted GitHub, https://github.com/ShixiangWang/sigminer-book. feedback book welcome. Feel free open issue GitHub send pull request notice typos issues (’m native English speaker ;) ).","code":""},{"path":"index.html","id":"bug-report-or-feature-request","chapter":"📖 Introduction","heading":"🐜 Bug report or feature request","text":"find bugs want new feature, please file issue.","code":""},{"path":"index.html","id":"acknowlegment","chapter":"📖 Introduction","heading":"🌵 Acknowlegment","text":"built book website imitating Biomedical knowledge mining using GOSemSim clusterProfiler reusing configurations, like thank Guangchuang Yu .","code":""},{"path":"mutsig-intro.html","id":"mutsig-intro","chapter":"1 Mutational signatures","heading":"1 Mutational signatures","text":"“Underlying cancer hallmarks genome instability, generates genetic diversity expedites acquisition, inflammation, fosters multiple hallmark functions” (Hanahan 2011). Cancer genomes typically harbors 1,000 somatic mutations small (e.g., point mutations, short insertions deletions) large scale (e.g., copy number variations, rearrangements). DNA contexts mutation may accumulate response endogenous processes exogeneous exposures (Alexandrov et al. 2013). recent years, computational approaches including non-negative matrix factorization (NMF) applied mutation catalog human/mouse tumors detect characteristic DNA mutational patterns (Alexandrov et al. 2013, 2020; Wang et al. 2021), also known “mutational signatures”.","code":""},{"path":"mutsig-intro.html","id":"biological-significance-of-mutational-signature","chapter":"1 Mutational signatures","heading":"1.1 Biological significance of mutational signature","text":"better illustrate biological significance mutational signatures, show \nwell organized figures .\nFigure 1.1: illustration SBS signature, fig source: https://www.nature.com/articles/nrg3729\n\nFigure 1.2: illustration SBS signature (2), fig source: https://www.nature.com/articles/s41467-018-05228-y\n","code":""},{"path":"mutsig-intro.html","id":"cosmic-signatures","chapter":"1 Mutational signatures","heading":"1.1.1 COSMIC signatures","text":"SBS (single base substitution, SNV) signature famous well-established type mutational signature. SBS signatures well studied related single-strand changes, typically caused defective DNA repair.\nCommon etiologies contain aging, defective DNA mismatch repair, smoking, ultraviolet light exposure APOBEC family members.Currently, SBS signatures summarized COSMIC database, two versions: v2 v3.Recently, Alexandrov et al. (2020) extends concept mutational signature three types alteration: SBS, DBS (short doublet base substitution) INDEL (short short insertion deletion).\nreported common signatures recorded COSMIC (https://cancer.sanger.ac.uk/cosmic/signatures/), usually call COSMIC signatures.SBS signatures:DBS signatures:INDEL (.e. ID) signatures:","code":""},{"path":"mutsig-intro.html","id":"copy-number-signatures","chapter":"1 Mutational signatures","heading":"1.1.2 Copy number signatures","text":"Unlike several mutation types presented current COSMIC database generating mutational signatures, hard represent copy number features generate matrix NMF decomposition.Macintyre et al. (2018) created new method generate matrix extracting signature NMF algorithm. steps :derive 6 copy number features absolute copy number profileapply mixture modeling breakdown feature distribution mixtures Gaussian mixtures Poisson distributionsgenerate sample--component matrix representing sum posterior probabilities copy-number event assigned component.Based work, devised new method discards statistical modeling create fixed number predefined components 8 copy number features generate matrix input NMF (Wang et al. 2021),\neasier reproduce result, apply different cancer types compare results.\ntest method works, applied prostate cancer successfully identified 5 copy number signatures (Wang et al. 2021).\nFigure 1.3: illustration copy number signatures, fig source: https://www.nature.com/articles/s41588-018-0212-y\nCurrently, studies focus copy number signatures reference signature database matching explaining etiologies (signatures presented two papers can used references). study , extra work explore validate . Furthermore, input absolute copy number data may generated different methods platforms, normal contribution copy number feature components varies little result relatively lower signature similarity comparing different cohorts different copy number profile generation methods.Copy number signatures Wang et al approach:addition, Alexandrov team adopted similar approach generating signatures like current COSMIC signatures\ndescribed ~10,000 human tumors (Steele et al. 2021). Many interesting results reported \nstandard approach allele-specific copy number profile.Copy number signatures Steele et al approach:","code":""},{"path":"mutsig-intro.html","id":"genome-rearrangement-signatures","chapter":"1 Mutational signatures","heading":"1.1.3 Genome rearrangement signatures","text":"Genome rearrangement signatures (RS) also used COSMIC signature like approach generation\nrearrangement classes tumor sample.\nRS limited whole genome sequencing data also less studied.\nRS successfully applied 560 breast tumor WGS data (Nik-Zainal et al. 2016) linked clinical\noutcomes high grade serous ovarian cancers (Hillman et al. 2018).","code":""},{"path":"mutsig-intro.html","id":"more-information","chapter":"1 Mutational signatures","heading":"1.1.4 More information","text":"information mutational signatures can read wiki page\nCOSMIC signature data page.","code":""},{"path":"prerequisite.html","id":"prerequisite","chapter":"2 Package prerequisite and installation","heading":"2 Package prerequisite and installation","text":"","code":""},{"path":"prerequisite.html","id":"package-prerequisite","chapter":"2 Package prerequisite and installation","heading":"2.1 Package prerequisite","text":"R package dependencies sigminer can checked specific fields DESCRIPTION file.\nnote, unlike common R package, many key features sigminer available suggested packages installed.\nBioconductor, R package BiocManager must installed\ninstalling sigminer. use BiocManager instead install.packages() install sigminer.\nwant handle reference genome data except hg19, e.g., hg38, also install Bioconductor\npackage BSgenome.Hsapiens.UCSC.hg38 /installing sigminer.","code":""},{"path":"prerequisite.html","id":"package-installation","chapter":"2 Package prerequisite and installation","heading":"2.2 Package installation","text":"stable release version sigminer package can installed CRAN:Set dependencies = TRUE recommended many packages required accessing full features provided sigminer (described previous section).\ndevelopment version sigminer package can installed Github Gitee installing CRAN version sigminer:see notification package update, please keep package date.sigminer also available Conda forge channel. using Conda,\ncan install sigminer :","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"sigminer\", dependencies = TRUE)\ninstall.packages(\"remotes\")\n# From GitHub\nremotes::install_github(\"ShixiangWang/sigminer\", dependencies = TRUE)\n# From Gitee\nremotes::install_git(\"https://gitee.com/ShixiangWang/sigminer\", dependencies = TRUE)# Please note version number of the bioconda release\n\n# You can install an individual environment firstly with\n# conda create -n sigminer\n# conda activate sigminer\nconda install -c bioconda -c conda-forge r-sigminer"},{"path":"prerequisite.html","id":"package-loading","chapter":"2 Package prerequisite and installation","heading":"2.3 Package loading","text":"load package, run:info sigminer can given :","code":"\nlibrary(sigminer)\nhello()\n## Thanks for using 'sigminer' package!\n## =========================================================================\n## Version: 2.1.1\n## Run citation('sigminer') to see how to cite sigminer in publications.\n## \n## Project home : https://github.com/ShixiangWang/sigminer\n## Bug report   : https://github.com/ShixiangWang/sigminer/issues\n## Documentation: https://shixiangwang.github.io/sigminer-book/\n## =========================================================================\n## "},{"path":"prerequisite.html","id":"package-references","chapter":"2 Package prerequisite and installation","heading":"2.4 Package references","text":"datasets/functions well organized documented package referrence list.\nchecking usage specific function fun, can also run ?fun R console.\nexample, see usage read_copynumber()","code":"\nlibrary(sigminer)\n?read_copynumber"},{"path":"basic-workflow.html","id":"basic-workflow","chapter":"3 Mutational signature analysis basics","heading":"3 Mutational signature analysis basics","text":"chapter demonstrates run two key mutational signature analyses (de novo signature\ndiscovery signature fitting) details.\nspecifically, introduce identify COSMIC signatures records variant calling data.\nCOSMIC signatures include three type signatures: SBS, DBS ID (short INDEL). signature type, please read chapter 4.signature identification procedure divided 3 steps:Read mutation data.Tally components: SBS, means classifying SBS records 96 components (common case) generating sample matrix counting component sample.de novo extract signatures quantify signature activity fitting observed\ndata reference signature.de novo signature discovery, manual approach automatic approach. choose manual approach, estimate signature number extract specified number signatures.","code":""},{"path":"basic-workflow.html","id":"data-input","chapter":"3 Mutational signature analysis basics","heading":"3.1 Data input","text":"input data VCF, MAF format.VCF, can VCF file paths.MAF, can either MAF file data.frame.MAF format standard way represent small-scale variants sigminer. popular R/Bioconductor package maftools (Mayakonda et al. 2018) analyzing MAF data. provides R class MAF represent MAF format data.","code":""},{"path":"basic-workflow.html","id":"vcf-as-input","chapter":"3 Mutational signature analysis basics","heading":"3.1.1 VCF as input","text":"use VCF files input, can use read_vcf() read multiple VCF files MAF object.","code":"\nlibrary(sigminer)\n\nvcfs <- list.files(system.file(\"extdata\", package = \"sigminer\"), \"*.vcf\", full.names = TRUE)\nmaf <- read_vcf(vcfs)\n## Reading file(s): /Users/wsx/Library/R/sigminer/extdata/test1.vcf, /Users/wsx/Library/R/sigminer/extdata/test2.vcf, /Users/wsx/Library/R/sigminer/extdata/test3.vcf\n## It seems /Users/wsx/Library/R/sigminer/extdata/test2.vcf has no normal VCF header, try parsing without header.\n## Annotating Variant Type...\n## Downloading https://zenodo.org/record/4771552/files/human_hg19_gene_info.rds to /Users/wsx/Library/R/sigminer/extdata/human_hg19_gene_info.rds\n## Annotating mutations to first matched gene based on database /Users/wsx/Library/R/sigminer/extdata/human_hg19_gene_info.rds...\n## Transforming into a MAF object...\n## -Validating\n## --Non MAF specific values in Variant_Classification column:\n##   Unknown\n## -Summarizing\n## -Processing clinical data\n## --Missing clinical data\n## -Finished in 0.033s elapsed (0.032s cpu)\nmaf <- read_vcf(vcfs, keep_only_pass = FALSE)\n## Reading file(s): /Users/wsx/Library/R/sigminer/extdata/test1.vcf, /Users/wsx/Library/R/sigminer/extdata/test2.vcf, /Users/wsx/Library/R/sigminer/extdata/test3.vcf\n## It seems /Users/wsx/Library/R/sigminer/extdata/test2.vcf has no normal VCF header, try parsing without header.\n## Annotating Variant Type...\n## Annotating mutations to first matched gene based on database /Users/wsx/Library/R/sigminer/extdata/human_hg19_gene_info.rds...\n## Transforming into a MAF object...\n## -Validating\n## --Non MAF specific values in Variant_Classification column:\n##   Unknown\n## -Summarizing\n## -Processing clinical data\n## --Missing clinical data\n## -Finished in 0.025s elapsed (0.024s cpu)"},{"path":"basic-workflow.html","id":"maf-as-input","chapter":"3 Mutational signature analysis basics","heading":"3.1.2 MAF as input","text":"MAF format recommended input, can provide either file data.frame.Typically, can obtain data following ways:get multiple VCF files convert MAF file (vcf2maf used tool conversion).get MAF file reference public data portal, e.g., cBioPortal GDC portal.get EXCEL file providing MAF-like data reference, read data firstly (readxl::read_excel()) construct data.frame providing necessary columns.MAF file MAF-like data.frame ready, can read/convert MAF object read_maf(). TCGA LAML dataset used example:laml MAF object. MAF class exported maftools sigminer. laml can directly use functions provided maftools.MAF object, mutation records stored slot data maf.silent.data slot contains non-silent variants, maf.silent slot contains silent variants.\nDefault uses “Variant Classifications” high/moderate variant consequences non-silent variants. http://asia.ensembl.org/Help/Glossary?id=535: “Frame_Shift_Del”, “Frame_Shift_Ins”, “Splice_Site”, “Translation_Start_Site”,“Nonsense_Mutation”, “Nonstop_Mutation”, “In_Frame_Del”,“In_Frame_Ins”, “Missense_Mutation” (see ?read_maf). want change, please set vc_nonSyn option.slots MAF object summary data either sample gene/variant type etc.Acute myeloid leukemia good object study mutational signatures due low mutation burden, use subset TCGA breast cohort illustration following analyses.Anand Mayakonda already stored whole TCGA mutation data MAF objects TCGAmutations package.\nload TCGA BRCA cohort create sub-cohort 100 tumors.save cohort need download dataset every time.CNV genome rearrangement records, check chapter 4.","code":"\nlaml.maf <- system.file(\"extdata\", \"tcga_laml.maf.gz\", package = \"maftools\", mustWork = TRUE)\nlaml <- read_maf(maf = laml.maf)\n## -Reading\n## -Validating\n## -Silent variants: 475 \n## -Summarizing\n## -Processing clinical data\n## --Missing clinical data\n## -Finished in 0.295s elapsed (0.271s cpu)\nlaml\n## An object of class  MAF \n##                    ID          summary  Mean Median\n##  1:        NCBI_Build               37    NA     NA\n##  2:            Center genome.wustl.edu    NA     NA\n##  3:           Samples              193    NA     NA\n##  4:            nGenes             1241    NA     NA\n##  5:   Frame_Shift_Del               52 0.269      0\n##  6:   Frame_Shift_Ins               91 0.472      0\n##  7:      In_Frame_Del               10 0.052      0\n##  8:      In_Frame_Ins               42 0.218      0\n##  9: Missense_Mutation             1342 6.953      7\n## 10: Nonsense_Mutation              103 0.534      0\n## 11:       Splice_Site               92 0.477      0\n## 12:             total             1732 8.974      9\nhead(laml@data)\n##    Hugo_Symbol Entrez_Gene_Id           Center NCBI_Build Chromosome\n## 1:      ABCA10          10349 genome.wustl.edu         37         17\n## 2:       ABCA4             24 genome.wustl.edu         37          1\n## 3:      ABCB11           8647 genome.wustl.edu         37          2\n## 4:       ABCC3           8714 genome.wustl.edu         37         17\n## 5:       ABCF1             23 genome.wustl.edu         37          6\n## 6:       ABCG4          64137 genome.wustl.edu         37         11\n##    Start_Position End_Position Strand Variant_Classification Variant_Type\n## 1:       67170917     67170917      +            Splice_Site          SNP\n## 2:       94490594     94490594      +      Missense_Mutation          SNP\n## 3:      169780250    169780250      +      Missense_Mutation          SNP\n## 4:       48760974     48760974      +      Missense_Mutation          SNP\n## 5:       30554429     30554429      +      Missense_Mutation          SNP\n## 6:      119031351    119031351      +      Missense_Mutation          SNP\n##    Reference_Allele Tumor_Seq_Allele1 Tumor_Seq_Allele2 Tumor_Sample_Barcode\n## 1:                T                 T                 C         TCGA-AB-2988\n## 2:                C                 C                 T         TCGA-AB-2869\n## 3:                G                 G                 A         TCGA-AB-3009\n## 4:                C                 C                 T         TCGA-AB-2887\n## 5:                G                 G                 A         TCGA-AB-2920\n## 6:                A                 A                 G         TCGA-AB-2934\n##    Protein_Change i_TumorVAF_WU i_transcript_name\n## 1:        p.K960R      45.66000       NM_080282.3\n## 2:       p.R1517H      38.12000       NM_000350.2\n## 3:       p.A1283V      46.97218       NM_003742.2\n## 4:       p.P1271S      56.41000       NM_003786.1\n## 5:        p.G658S      40.95000    NM_001025091.1\n## 6:        p.Y567C      32.84000       NM_022169.1\nhead(laml@maf.silent)\n##    Hugo_Symbol Entrez_Gene_Id           Center NCBI_Build Chromosome\n## 1:      ABCC11          85320 genome.wustl.edu         37         16\n## 2:        ACAN            176 genome.wustl.edu         37         15\n## 3:       ACAT1             38 genome.wustl.edu         37         11\n## 4:       ACCN2             41 genome.wustl.edu         37         12\n## 5:       ACTA2             59 genome.wustl.edu         37         10\n## 6:       ACTL9         284382 genome.wustl.edu         37         19\n##    Start_Position End_Position Strand Variant_Classification Variant_Type\n## 1:       48244997     48244997      +                 Silent          SNP\n## 2:       89401084     89401084      +                 Silent          SNP\n## 3:      108009744    108009744      +                 Silent          SNP\n## 4:       50452780     50452780      +                 Silent          SNP\n## 5:       90695109     90695109      +                 Silent          SNP\n## 6:        8808551      8808551      +                 Silent          SNP\n##    Reference_Allele Tumor_Seq_Allele1 Tumor_Seq_Allele2 Tumor_Sample_Barcode\n## 1:                G                 G                 A         TCGA-AB-2830\n## 2:                C                 C                 T         TCGA-AB-2898\n## 3:                T                 T                 G         TCGA-AB-2887\n## 4:                C                 C                 G         TCGA-AB-3009\n## 5:                C                 C                 T         TCGA-AB-2973\n## 6:                G                 G                 A         TCGA-AB-2936\n##    Protein_Change i_TumorVAF_WU i_transcript_name\n## 1:        p.I490I    34.2700000       NM_032583.3\n## 2:       p.S1756S    38.3000000       NM_013227.2\n## 3:        p.T185T    49.0400000       NM_000019.3\n## 4:         p.L77L    48.1000000       NM_020039.2\n## 5:        p.P335P     0.2012072       NM_001613.1\n## 6:        p.F167F    46.1500000       NM_178525.3\nslotNames(laml)\n## [1] \"data\"                           \"variants.per.sample\"           \n## [3] \"variant.type.summary\"           \"variant.classification.summary\"\n## [5] \"gene.summary\"                   \"summary\"                       \n## [7] \"maf.silent\"                     \"clinical.data\"\nlibrary(maftools)\ntcgaAvailable()\nset.seed(1234)\n# brca <- readRDS(\"data/BRCA.RDs\")\nbrca <- tcga_load(\"BRCA\")\nbrca <- subsetMaf(brca,\n  tsb = as.character(sample(brca@variants.per.sample$Tumor_Sample_Barcode, 100))\n)\nsaveRDS(brca, file = \"data/brca.rds\")\nbrca <- readRDS(\"data/brca.rds\")"},{"path":"basic-workflow.html","id":"tally-components","chapter":"3 Mutational signature analysis basics","heading":"3.2 Tally components","text":"","code":""},{"path":"basic-workflow.html","id":"the-most-common-96-components","chapter":"3 Mutational signature analysis basics","heading":"3.2.1 The most common 96 components","text":"According 3-nucleotide context (mutated base, 5’ 3’ adjacent bases) base complementary pairing principle, can divide SBS mutations 96 mutation types. call mutation type component .classification based six substitution subtypes: C>, C>G, C>T, T>, T>C, T>G (substitutions referred pyrimidine mutated Watson—Crick base pair). , substitutions examined incorporating information bases immediately 5’ 3’ mutated base generating 96 possible mutation types (6 types substitution x 4 types 5’ base x 4 types 3’ base).\nFigure 3.1: illustration 96 components, fig source: https://en.wikipedia.org/wiki/Mutational_signatures\ntally components sample, generate sample--component matrix.set use_syn = TRUE include variant records MAF object generate sample matrix.use notion left[ref>mut]right mark component, e.g. C[T>G]means base T 5’ adjacent base C 3’ adjacent base mutated base G.","code":"\nmt_tally <- sig_tally(\n  brca,\n  ref_genome = \"BSgenome.Hsapiens.UCSC.hg19\",\n  use_syn = TRUE\n)\n## ℹ [2021-12-04 23:49:57]: Started.\n## ℹ [2021-12-04 23:50:06]: We would assume you marked all variants' position in + strand.\n## \n## Attaching package: 'S4Vectors'\n## The following objects are masked from 'package:base':\n## \n##     expand.grid, I, unname\n## \n## Attaching package: 'Biostrings'\n## The following object is masked from 'package:base':\n## \n##     strsplit\n## ✓ [2021-12-04 23:50:06]: Reference genome loaded.\n## ✓ [2021-12-04 23:50:06]: Variants from MAF object queried.\n## ✓ [2021-12-04 23:50:06]: Chromosome names checked.\n## ✓ [2021-12-04 23:50:06]: Sex chromosomes properly handled.\n## ✓ [2021-12-04 23:50:06]: Only variants located in standard chromosomes (1:22, X, Y, M/MT) are kept.\n## ✓ [2021-12-04 23:50:06]: Variant start and end position checked.\n## ✓ [2021-12-04 23:50:06]: Variant data for matrix generation preprocessed.\n## ℹ [2021-12-04 23:50:06]: SBS matrix generation - start.\n## ℹ [2021-12-04 23:50:06]: Extracting 5' and 3' adjacent bases.\n## ℹ [2021-12-04 23:50:09]: Extracting +/- 20bp around mutated bases for background C>T estimation.\n## ℹ [2021-12-04 23:50:09]: Estimating APOBEC enrichment scores.\n## ℹ [2021-12-04 23:50:09]: Performing one-way Fisher's test for APOBEC enrichment.\n## ✓ [2021-12-04 23:50:10]: APOBEC related mutations are enriched in 28% of samples (APOBEC enrichment score > 2; 28 of 100 samples)\n## ℹ [2021-12-04 23:50:10]: Creating SBS sample-by-component matrices.\n## ✓ [2021-12-04 23:50:10]: SBS-6 matrix created.\n## ✓ [2021-12-04 23:50:10]: SBS-96 matrix created.\n## ✓ [2021-12-04 23:50:10]: SBS-1536 matrix created.\n## ℹ [2021-12-04 23:50:10]: Return SBS-96 as major matrix.\n## ✓ [2021-12-04 23:50:10]: Done.\n## ℹ [2021-12-04 23:50:10]: 12.54 secs elapsed.\nmt_tally$nmf_matrix[1:5, 1:5]\n##                              A[T>C]A C[T>C]A G[T>C]A T[T>C]A A[C>T]A\n## TCGA-A1-A0SH-01A-11D-A099-09       0       0       1       1       0\n## TCGA-A2-A04N-01A-11D-A10Y-09       0       0       0       1       2\n## TCGA-A2-A0CP-01A-11W-A050-09       0       0       0       0       0\n## TCGA-A2-A0EP-01A-52D-A22X-09       0       0       1       0       0\n## TCGA-A2-A0EV-01A-11W-A050-09       0       0       1       0       0"},{"path":"basic-workflow.html","id":"other-situations","chapter":"3 Mutational signature analysis basics","heading":"3.2.2 Other Situations","text":"show common SBS classifications, situations supported sigminer, including classifications SBS records mutation types (DBS ID). situations SBS, DBS ID signatures well documented wiki SigProfilerMatrixGenerator package.","code":""},{"path":"basic-workflow.html","id":"other-sbs-classifications","chapter":"3 Mutational signature analysis basics","heading":"3.2.2.1 Other SBS classifications","text":"calling sig_tally(), used matrix stored nmf_matrix, matrices generated sigminer stored all_matrices.add strand classification, matrices can generated sigminer return.","code":"\nstr(mt_tally$all_matrices, max.level = 1)\n## List of 3\n##  $ SBS_6   : int [1:100, 1:6] 7 6 5 4 9 7 5 5 0 5 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_96  : int [1:100, 1:96] 0 0 0 0 0 0 1 2 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_1536: int [1:100, 1:1536] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\nmt_tally2 <- sig_tally(\n  brca,\n  ref_genome = \"BSgenome.Hsapiens.UCSC.hg19\",\n  use_syn = TRUE, add_trans_bias = TRUE\n)\n## ℹ [2021-12-04 23:50:10]: Started.\n## ℹ [2021-12-04 23:50:10]: We would assume you marked all variants' position in + strand.\n## ✓ [2021-12-04 23:50:10]: Reference genome loaded.\n## ✓ [2021-12-04 23:50:10]: Variants from MAF object queried.\n## ✓ [2021-12-04 23:50:10]: Chromosome names checked.\n## ✓ [2021-12-04 23:50:10]: Sex chromosomes properly handled.\n## ✓ [2021-12-04 23:50:10]: Only variants located in standard chromosomes (1:22, X, Y, M/MT) are kept.\n## ✓ [2021-12-04 23:50:10]: Variant start and end position checked.\n## ✓ [2021-12-04 23:50:10]: Variant data for matrix generation preprocessed.\n## ℹ [2021-12-04 23:50:10]: SBS matrix generation - start.\n## ℹ [2021-12-04 23:50:10]: Extracting 5' and 3' adjacent bases.\n## ℹ [2021-12-04 23:50:11]: Extracting +/- 20bp around mutated bases for background C>T estimation.\n## ℹ [2021-12-04 23:50:11]: Estimating APOBEC enrichment scores.\n## ℹ [2021-12-04 23:50:11]: Performing one-way Fisher's test for APOBEC enrichment.\n## ✓ [2021-12-04 23:50:11]: APOBEC related mutations are enriched in 28% of samples (APOBEC enrichment score > 2; 28 of 100 samples)\n## ℹ [2021-12-04 23:50:11]: Creating SBS sample-by-component matrices.\n## ✓ [2021-12-04 23:50:11]: SBS-6 matrix created.\n## ✓ [2021-12-04 23:50:11]: SBS-96 matrix created.\n## ✓ [2021-12-04 23:50:11]: SBS-1536 matrix created.\n## ✓ [2021-12-04 23:50:12]: SBS-24 (6x4) matrix created.\n## ✓ [2021-12-04 23:50:12]: SBS-384 (96x4) matrix created.\n## ✓ [2021-12-04 23:50:12]: SBS-6144 (1536x4) matrix created.\n## ℹ [2021-12-04 23:50:12]: Return SBS-192 as major matrix.\n## ✓ [2021-12-04 23:50:12]: Done.\n## ℹ [2021-12-04 23:50:12]: 2.451 secs elapsed.\nstr(mt_tally2$all_matrices, max.level = 1)\n## List of 7\n##  $ SBS_6   : int [1:100, 1:6] 7 6 5 4 9 7 5 5 0 5 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_24  : int [1:100, 1:24] 6 3 3 2 6 4 1 2 0 3 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_96  : int [1:100, 1:96] 0 0 0 0 0 0 1 2 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_192 : int [1:100, 1:192] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_384 : int [1:100, 1:384] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_1536: int [1:100, 1:1536] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_6144: int [1:100, 1:6144] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2"},{"path":"basic-workflow.html","id":"dbs-and-id-components","chapter":"3 Mutational signature analysis basics","heading":"3.2.2.2 DBS and ID components","text":"want generate DBS ID matrices, just modify mode option.Program stop records analyze.\nLet’s see ID records.","code":"\nmt_tally_DBS <- sig_tally(\n  brca,\n  ref_genome = \"BSgenome.Hsapiens.UCSC.hg19\",\n  use_syn = TRUE,\n  mode = \"DBS\",\n  add_trans_bias = TRUE\n)\n## ℹ [2021-12-04 23:50:13]: Started.\n## ℹ [2021-12-04 23:50:13]: We would assume you marked all variants' position in + strand.\n## ✓ [2021-12-04 23:50:13]: Reference genome loaded.\n## ✓ [2021-12-04 23:50:13]: Variants from MAF object queried.\n## ✓ [2021-12-04 23:50:13]: Chromosome names checked.\n## ✓ [2021-12-04 23:50:13]: Sex chromosomes properly handled.\n## ✓ [2021-12-04 23:50:13]: Only variants located in standard chromosomes (1:22, X, Y, M/MT) are kept.\n## ✓ [2021-12-04 23:50:13]: Variant start and end position checked.\n## ✓ [2021-12-04 23:50:13]: Variant data for matrix generation preprocessed.\n## ℹ [2021-12-04 23:50:13]: DBS matrix generation - start.\n## ℹ [2021-12-04 23:50:13]: Searching DBS records...\n## ✓ [2021-12-04 23:50:13]: Done.\n## ✓ [2021-12-04 23:50:15]: Reference sequences queried from genome.\n## ✓ [2021-12-04 23:50:15]: DBS-78 matrix created.\n## ✓ [2021-12-04 23:50:15]: DBS-1248 matrix created.\n## ✓ [2021-12-04 23:50:15]: DBS-186 matrix created.\n## ℹ [2021-12-04 23:50:15]: Return DBS-186 as major matrix.\n## ✓ [2021-12-04 23:50:15]: Done.\n## ℹ [2021-12-04 23:50:15]: 2.172 secs elapsed.\nstr(mt_tally_DBS$all_matrices, max.level = 1)\n## List of 3\n##  $ DBS_78  : int [1:100, 1:78] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ DBS_186 : int [1:100, 1:186] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ DBS_1248: int [1:100, 1:1248] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\nmt_tally_ID <- sig_tally(\n  brca,\n  ref_genome = \"BSgenome.Hsapiens.UCSC.hg19\",\n  use_syn = TRUE,\n  mode = \"ID\",\n  add_trans_bias = TRUE\n)\n## ℹ [2021-12-04 23:50:15]: Started.\n## ℹ [2021-12-04 23:50:15]: We would assume you marked all variants' position in + strand.\n## ✓ [2021-12-04 23:50:15]: Reference genome loaded.\n## ✓ [2021-12-04 23:50:15]: Variants from MAF object queried.\n## ✓ [2021-12-04 23:50:15]: Chromosome names checked.\n## ✓ [2021-12-04 23:50:15]: Sex chromosomes properly handled.\n## ✓ [2021-12-04 23:50:15]: Only variants located in standard chromosomes (1:22, X, Y, M/MT) are kept.\n## ✓ [2021-12-04 23:50:15]: Variant start and end position checked.\n## ✓ [2021-12-04 23:50:15]: Variant data for matrix generation preprocessed.\n## ℹ [2021-12-04 23:50:15]: INDEL matrix generation - start.\n## ✓ [2021-12-04 23:50:17]: Reference sequences queried from genome.\n## ✓ [2021-12-04 23:50:17]: INDEL length extracted.\n## ✓ [2021-12-04 23:50:17]: Adjacent copies counted.\n## ✓ [2021-12-04 23:50:40]: Microhomology size calculated.\n## ✓ [2021-12-04 23:50:40]: INDEL records classified into different components (types).\n## ✓ [2021-12-04 23:50:40]: ID-28 matrix created.\n## ✓ [2021-12-04 23:50:40]: ID-83 matrix created.\n## ✓ [2021-12-04 23:50:40]: ID-415 matrix created.\n## ℹ [2021-12-04 23:50:40]: Return ID-415 as major matrix.\n## ✓ [2021-12-04 23:50:40]: Done.\n## ℹ [2021-12-04 23:50:40]: 24.857 secs elapsed.\nstr(mt_tally_ID$all_matrices, max.level = 1)\n## List of 3\n##  $ ID_28 : int [1:100, 1:28] 0 1 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ ID_83 : int [1:100, 1:83] 0 1 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ ID_415:'data.frame':  100 obs. of  415 variables:"},{"path":"basic-workflow.html","id":"take-togother","chapter":"3 Mutational signature analysis basics","heading":"3.2.2.3 Take togother","text":"want get matrices SBS, DBS ID time, don’t need write loop type three times .\nJust set mode='', sigminer !Please note, case, just list containing matrices return.","code":"\nmt_tally_all <- sig_tally(\n  brca,\n  ref_genome = \"BSgenome.Hsapiens.UCSC.hg19\",\n  use_syn = TRUE,\n  mode = \"ALL\",\n  add_trans_bias = TRUE\n)\n## ℹ [2021-12-04 23:50:40]: Started.\n## ℹ [2021-12-04 23:50:40]: We would assume you marked all variants' position in + strand.\n## ✓ [2021-12-04 23:50:40]: Reference genome loaded.\n## ✓ [2021-12-04 23:50:40]: Variants from MAF object queried.\n## ✓ [2021-12-04 23:50:40]: Chromosome names checked.\n## ✓ [2021-12-04 23:50:40]: Sex chromosomes properly handled.\n## ✓ [2021-12-04 23:50:40]: Only variants located in standard chromosomes (1:22, X, Y, M/MT) are kept.\n## ✓ [2021-12-04 23:50:40]: Variant start and end position checked.\n## ✓ [2021-12-04 23:50:40]: Variant data for matrix generation preprocessed.\n## ℹ [2021-12-04 23:50:40]: All types of matrices generation - start.\n## ℹ [2021-12-04 23:50:40]: SBS matrix generation - start.\n## ℹ [2021-12-04 23:50:40]: Extracting 5' and 3' adjacent bases.\n## ℹ [2021-12-04 23:50:42]: Extracting +/- 20bp around mutated bases for background C>T estimation.\n## ℹ [2021-12-04 23:50:43]: Estimating APOBEC enrichment scores.\n## ℹ [2021-12-04 23:50:43]: Performing one-way Fisher's test for APOBEC enrichment.\n## ✓ [2021-12-04 23:50:43]: APOBEC related mutations are enriched in 28% of samples (APOBEC enrichment score > 2; 28 of 100 samples)\n## ℹ [2021-12-04 23:50:43]: Creating SBS sample-by-component matrices.\n## ✓ [2021-12-04 23:50:43]: SBS-6 matrix created.\n## ✓ [2021-12-04 23:50:43]: SBS-96 matrix created.\n## ✓ [2021-12-04 23:50:43]: SBS-1536 matrix created.\n## ✓ [2021-12-04 23:50:43]: SBS-24 (6x4) matrix created.\n## ✓ [2021-12-04 23:50:43]: SBS-384 (96x4) matrix created.\n## ✓ [2021-12-04 23:50:43]: SBS-6144 (1536x4) matrix created.\n## ℹ [2021-12-04 23:50:43]: Return SBS-192 as major matrix.\n## ℹ [2021-12-04 23:50:43]: DBS matrix generation - start.\n## ℹ [2021-12-04 23:50:43]: Searching DBS records...\n## ✓ [2021-12-04 23:50:44]: Done.\n## ✓ [2021-12-04 23:50:45]: Reference sequences queried from genome.\n## ✓ [2021-12-04 23:50:45]: DBS-78 matrix created.\n## ✓ [2021-12-04 23:50:45]: DBS-1248 matrix created.\n## ✓ [2021-12-04 23:50:46]: DBS-186 matrix created.\n## ℹ [2021-12-04 23:50:46]: Return DBS-186 as major matrix.\n## ℹ [2021-12-04 23:50:46]: INDEL matrix generation - start.\n## ✓ [2021-12-04 23:50:48]: Reference sequences queried from genome.\n## ✓ [2021-12-04 23:50:48]: INDEL length extracted.\n## ✓ [2021-12-04 23:50:48]: Adjacent copies counted.\n## ✓ [2021-12-04 23:51:11]: Microhomology size calculated.\n## ✓ [2021-12-04 23:51:12]: INDEL records classified into different components (types).\n## ✓ [2021-12-04 23:51:12]: ID-28 matrix created.\n## ✓ [2021-12-04 23:51:12]: ID-83 matrix created.\n## ✓ [2021-12-04 23:51:12]: ID-415 matrix created.\n## ℹ [2021-12-04 23:51:12]: Return ID-415 as major matrix.\n## ℹ [2021-12-04 23:51:12]: All types of matrices generation (APOBEC scores included) - end.\n## ✓ [2021-12-04 23:51:12]: Done.\n## ℹ [2021-12-04 23:51:12]: 31.747 secs elapsed.\nstr(mt_tally_all, max.level = 1)\n## List of 14\n##  $ SBS_6        : int [1:100, 1:6] 7 6 5 4 9 7 5 5 0 5 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_24       : int [1:100, 1:24] 6 3 3 2 6 4 1 2 0 3 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_96       : int [1:100, 1:96] 0 0 0 0 0 0 1 2 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_192      : int [1:100, 1:192] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_384      : int [1:100, 1:384] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_1536     : int [1:100, 1:1536] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ SBS_6144     : int [1:100, 1:6144] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ DBS_78       : int [1:100, 1:78] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ DBS_186      : int [1:100, 1:186] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ DBS_1248     : int [1:100, 1:1248] 0 0 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ ID_28        : int [1:100, 1:28] 0 1 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ ID_83        : int [1:100, 1:83] 0 1 0 0 0 0 0 0 0 0 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##  $ ID_415       :'data.frame':   100 obs. of  415 variables:\n##  $ APOBEC_scores:Classes 'data.table' and 'data.frame':  100 obs. of  44 variables:\n##   ..- attr(*, \".internal.selfref\")=<externalptr> \n##   ..- attr(*, \"index\")= int(0) \n##   .. ..- attr(*, \"__APOBEC_Enriched\")= int [1:100] 17 21 23 24 25 26 27 28 30 32 ..."},{"path":"basic-workflow.html","id":"de-novo-signature-discovery","chapter":"3 Mutational signature analysis basics","heading":"3.3 de novo signature discovery","text":"Sigminer provides many approaches extract mutational signatures. test performances, use 4 mutation catalog datasets (mutation catalog dataset composed 30 samples, 10 COSMIC v2 (SBS) signatures randomly assigned sample random signature exposure/activity) Degasperi et al. (2020). following table shows many signatures can recovered corresponding average cosine similarity COSMIC reference signatures approach settings.NOTE: although Bayesian NMF approach L1KL L1WL2H prior recover 10 signatures , close true answer initial signature number 20 automatic way, result signatures highly similar reference signatures. also reminds us use method find signatures small contributions tumors.sigminer v2.1.0, unified interface sig_unify_extract(). implemented access \n4 signature extraction approaches.determine method, please read parameters shown detail function.“bayes_nmf” corresponds sig_auto_extract().“repeated_nmf” corresponds sig_extract().“bootstrap_nmf” coresponds bp_extract_signatures().“sigprofiler” corresponds sigprofiler_extract().Note, use sig_extract() (“repeated_nmf”) don’t know \nselect signature number, run sig_estimate() firstly.","code":"\nargs(sig_unify_extract)\n## function (nmf_matrix, range = 2:5, nrun = 10, approach = c(\"bayes_nmf\", \n##     \"repeated_nmf\", \"bootstrap_nmf\", \"sigprofiler\"), cores = 1L, \n##     ...) \n## NULL"},{"path":"basic-workflow.html","id":"manual-signature-estimation-and-extraction","chapter":"3 Mutational signature analysis basics","heading":"3.3.1 Manual signature estimation and extraction","text":"example, let’s try signature number 2-6. simplicity, just run NMF 10 times signature number. use 4 cores speed computation.can show signature number survey different measures show_sig_number_survey2().details measures , please read Gaujoux Seoighe (2010) vignette R package NMF.\nmeasures either provide stability (cophenetic) well can reconstructed (rss).Typically, measure cophenetic used determining signature number. can easily generate elbow plot\nfunction show_sig_number_survey().common approach use cophenetic correlation coefficient. Brunet et al. suggested choosing smallest value r coefficient starts decreasing. (Gaujoux Seoighe 2010)\nCophenetic value (range 0-1) indicates robustness consensus matrix clustering. situation, 3 good. However, can found cophenetic values >=0.9 2 5. suitable way considering stability reconstruction error time, can easily done show_sig_number_survey().function flexible, can pick measure left/right axis. However, default setting recommended way.\ncan see get minimal RSS signature number, value goes 5 6, RSS increase! choose signature number 5 6 overfitting.NOTE: gold standard determine signature number. Sometimes, consider multiple measures. Remember, important thing good biological explanation signature.\nbest solution study may best solution math.Now 5 signatures stable solution, next can extract \nruns obtain optimal result. general, use 30~50 NMF runs get robust result.","code":"\nmt_est <- sig_estimate(mt_tally$nmf_matrix,\n  range = 2:6,\n  nrun = 10, # increase this value if you wana a more stable estimation\n  use_random = FALSE, # if TRUE, add results from randomized input\n  cores = 4,\n  verbose = TRUE\n)\n## You can also select the measures to show\n## by 'what' option\nshow_sig_number_survey2(mt_est$survey)\nshow_sig_number_survey(mt_est$survey, right_y = NULL)\nshow_sig_number_survey(mt_est$survey)\nmt_sig <- sig_extract(mt_tally$nmf_matrix,\n  n_sig = 5,\n  nrun = 30,\n  cores = 4\n)"},{"path":"basic-workflow.html","id":"automatic-extraction","chapter":"3 Mutational signature analysis basics","heading":"3.3.2 Automatic extraction","text":"idea select optimal signature number procedures , can try auto-extraction approaches provided sigminer.latest version sigminer provides three ways auto-extract mutational signatures.Auto-extract signatures automatic relevance determination technique non-negative matrix factorization (Tan Févotte 2012), code implemented SignatureAnalyzer (Kim et al. 2016) exported sigminer. approach known bayesian NMF default approach sig_unify_extract().Auto-extract signatures SigProfiler, gold-standard tool used identifying signatures cataloged COSMIC database. technical details please read Alexandrov et al. (2020).Multiple NMF runs bootstrapped mutation catalogs. method adopted Degasperi et al. (2020).","code":""},{"path":"basic-workflow.html","id":"method-1-bayesian-nmf","chapter":"3 Mutational signature analysis basics","heading":"3.3.2.1 Method 1: Bayesian NMF","text":"approach, need set maximum signature number (default 25) run times get result. 10 nrun okay, 100 recommended.\nBayesian NMF starts larger signature number reduce proper signature number maximize posterior probability.:program uses ‘robust’ strategy return result (see strategy option). means run 10 times 6 return 4 signatures, optimal result 4 signatures returned.info run can given :mt_sig2 similar structure mut_sig.","code":"\nmt_sig2 <- sig_unify_extract(mt_tally$nmf_matrix, range = 10, nrun = 10)\nmt_sig2 <- sig_auto_extract(mt_tally$nmf_matrix,\n  K0 = 10, nrun = 10,\n  strategy = \"stable\"\n)\nknitr::kable(mt_sig2$Raw$summary_run)"},{"path":"basic-workflow.html","id":"method-2-sigprofiler","chapter":"3 Mutational signature analysis basics","heading":"3.3.2.2 Method 2: SigProfiler","text":"Sigminer provides two functions sigprofiler_extract() sigprofiler_import() install, use SigProfiler import SigProfilerExtractor results R Signature object like extraction methods mentioned .(running) example given (see ?sigprofiler info).","code":"\nreticulate::conda_list()\nsigprofiler_extract(cn_tally_W$nmf_matrix, \"~/test/test_sigminer\",\n  use_conda = TRUE\n)\n\n# Same as\n# sig_unify_extract(mt_tally$nmf_matrix, use_conda = FALSE, py_path = \"/Users/wsx/anaconda3/bin/python\", approach = \"sigprofiler\", out = \"~/test/test_sigminer\")\nsigprofiler_extract(mt_tally$nmf_matrix, \"~/test/test_sigminer\",\n  use_conda = FALSE, py_path = \"/Users/wsx/anaconda3/bin/python\"\n)"},{"path":"basic-workflow.html","id":"method-3-bootstrapped-nmf","chapter":"3 Mutational signature analysis basics","heading":"3.3.2.3 Method 3: bootstrapped NMF","text":"","code":"\n# Same as\n# mt_sig3 <- sig_unify_extract(\n#   cn_tally_W$nmf_matrix,\n#   range = 3:8,\n#   nrun = 10\n#   n_bootstrap = 5\n# )\n\nmt_sig3 <- bp_extract_signatures(\n  cn_tally_W$nmf_matrix,\n  range = 3:8,\n  n_bootstrap = 5,\n  n_nmf_run = 10\n)"},{"path":"basic-workflow.html","id":"match-signatures","chapter":"3 Mutational signature analysis basics","heading":"3.4 Match Signatures","text":"extracting signatures, need know etiologies. can done comparing identified signatures reference signatures COSMIC database.result object sim list.result can see three signatures properly matched COSMIC reference signatures. find unknown signatures study, explore etiologies analyses even experiments.similarity matrix can plotted.can also try COSMIC signature database V3 :","code":"\nsim <- get_sig_similarity(mt_sig2)\n## -Comparing against COSMIC signatures\n## ------------------------------------\n## --Found Sig1 most similar to COSMIC_3\n##    Aetiology: defects in DNA-DSB repair by HR [similarity: 0.826]\n## --Found Sig2 most similar to COSMIC_1\n##    Aetiology: spontaneous deamination of 5-methylcytosine [similarity: 0.944]\n## --Found Sig3 most similar to COSMIC_2\n##    Aetiology: APOBEC Cytidine Deaminase (C>T) [similarity: 0.838]\n## ------------------------------------\n## Return result invisiblely.\nstr(sim)\n## List of 4\n##  $ similarity  : num [1:3, 1:30] 0.826 0.274 0.373 0.56 0.944 0.164 0.088 0.259 0.838 0.722 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##   .. ..$ : chr [1:3] \"Sig1\" \"Sig2\" \"Sig3\"\n##   .. ..$ : chr [1:30] \"COSMIC_3\" \"COSMIC_1\" \"COSMIC_2\" \"COSMIC_4\" ...\n##  $ aetiology_db:List of 1\n##   ..$ : chr [1:30] \"spontaneous deamination of 5-methylcytosine\" \"APOBEC Cytidine Deaminase (C>T)\" \"defects in DNA-DSB repair by HR\" \"exposure to tobacco (smoking) mutagens\" ...\n##  $ best_match  :List of 3\n##   ..$ Sig1:List of 2\n##   .. ..$ aetiology : chr \"defects in DNA-DSB repair by HR\"\n##   .. ..$ best_match: chr \"Best match: COSMIC_3 [similarity: 0.826]\"\n##   ..$ Sig2:List of 2\n##   .. ..$ aetiology : chr \"spontaneous deamination of 5-methylcytosine\"\n##   .. ..$ best_match: chr \"Best match: COSMIC_1 [similarity: 0.944]\"\n##   ..$ Sig3:List of 2\n##   .. ..$ aetiology : chr \"APOBEC Cytidine Deaminase (C>T)\"\n##   .. ..$ best_match: chr \"Best match: COSMIC_2 [similarity: 0.838]\"\n##  $ rss         : num [1:3, 1:30] 0.04294 0.00684 0.14741 0.24881 0.24076 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##   .. ..$ : chr [1:3] \"Sig1\" \"Sig2\" \"Sig3\"\n##   .. ..$ : chr [1:30] \"COSMIC_1\" \"COSMIC_2\" \"COSMIC_3\" \"COSMIC_4\" ...\n##  - attr(*, \"class\")= chr [1:2] \"similarity\" \"list\"\npheatmap::pheatmap(sim$similarity)\nsim_v3 <- get_sig_similarity(mt_sig2, sig_db = \"SBS\")\n## -Comparing against COSMIC signatures\n## ------------------------------------\n## --Found Sig1 most similar to SBS3\n##    Aetiology: Defective homologous recombination DNA damage repair [similarity: 0.828]\n## --Found Sig2 most similar to SBS1\n##    Aetiology: Spontaneous deamination of 5-methylcytosine (clock-like signature) [similarity: 0.876]\n## --Found Sig3 most similar to SBS2\n##    Aetiology: Activity of APOBEC family of cytidine deaminases [similarity: 0.746]\n## ------------------------------------\n## Return result invisiblely."},{"path":"basic-workflow.html","id":"reference-signature-fitting","chapter":"3 Mutational signature analysis basics","heading":"3.5 Reference signature fitting","text":"Besides de novo signature discovery shown previous chapters, another common task \ngotten reference signatures (either known database like COSMIC de novo discovery step), want know signatures contribute (fit) sample. ’s target sig_fit().sig_fit() uses multiple methods compute exposure pre-defined signatures spectrum (can ) sample. Use ?sig_fit see detail.show function works, use sample maximum mutation counts example data.","code":"\ni <- which.max(apply(mt_tally$nmf_matrix, 1, sum))\nexample_mat <- mt_tally$nmf_matrix[i, , drop = FALSE] %>% t()\nhead(example_mat)\n##         TCGA-A8-A09G-01A-21W-A019-09\n## A[T>C]A                            1\n## C[T>C]A                            0\n## G[T>C]A                            1\n## T[T>C]A                            1\n## A[C>T]A                            5\n## C[C>T]A                            3"},{"path":"basic-workflow.html","id":"fit-signatures-from-reference-signature-databasase","chapter":"3 Mutational signature analysis basics","heading":"3.5.1 Fit signatures from reference signature databasase","text":"SBS signatures, users may want directly use reference signatures COSMIC database.default, COSMIC v2 signature database 30 reference signatures used (.e. sig_db = \"legacy\"). Set sig_db = \"SBS\" COSMIC v3 signature database.\n’s !can set type = \"relative\" getting relative exposure.multiple samples, can return data.table, can easier integrate information R.set multiple signatures, recommend setting rel_threshold option, set exposure signature 0 relative exposure sample less rel_threshold.","code":"\nsig_fit(example_mat, sig_index = 1:30)\n## ℹ [2021-12-04 23:51:15]: Started.\n## ✓ [2021-12-04 23:51:15]: Signature index detected.\n## ℹ [2021-12-04 23:51:15]: Checking signature database in package.\n## ℹ [2021-12-04 23:51:15]: Checking signature index.\n## ℹ [2021-12-04 23:51:15]: Valid index for db 'legacy':\n## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n## ✓ [2021-12-04 23:51:15]: Database and index checked.\n## ✓ [2021-12-04 23:51:15]: Signature normalized.\n## ℹ [2021-12-04 23:51:15]: Checking row number for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ℹ [2021-12-04 23:51:15]: Checking rownames for catalog matrix and signature matrix.\n## ℹ [2021-12-04 23:51:15]: Matrix V and W don't have same orders. Try reordering...\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ✓ [2021-12-04 23:51:15]: Method 'QP' detected.\n## ✓ [2021-12-04 23:51:15]: Corresponding function generated.\n## ℹ [2021-12-04 23:51:15]: Calling function.\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A8-A09G-01A-21W-A019-09\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: Generating output signature exposures.\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: 0.046 secs elapsed.\n##           TCGA-A8-A09G-01A-21W-A019-09\n## COSMIC_1                     24.215933\n## COSMIC_2                    127.164108\n## COSMIC_3                      0.000000\n## COSMIC_4                      0.000000\n## COSMIC_5                      0.000000\n## COSMIC_6                      0.000000\n## COSMIC_7                      4.907674\n## COSMIC_8                      0.000000\n## COSMIC_9                      0.000000\n## COSMIC_10                     3.584276\n## COSMIC_11                     0.000000\n## COSMIC_12                    11.062526\n## COSMIC_13                   168.298139\n## COSMIC_14                     0.000000\n## COSMIC_15                     0.000000\n## COSMIC_16                     0.000000\n## COSMIC_17                     5.578495\n## COSMIC_18                     0.000000\n## COSMIC_19                     0.000000\n## COSMIC_20                     0.000000\n## COSMIC_21                     0.000000\n## COSMIC_22                     0.000000\n## COSMIC_23                     0.000000\n## COSMIC_24                    12.084656\n## COSMIC_25                     0.000000\n## COSMIC_26                     0.000000\n## COSMIC_27                     0.000000\n## COSMIC_28                     0.000000\n## COSMIC_29                     0.000000\n## COSMIC_30                     0.104192\nsig_fit(example_mat, sig_index = 1:30, type = \"relative\")\n## ℹ [2021-12-04 23:51:15]: Started.\n## ✓ [2021-12-04 23:51:15]: Signature index detected.\n## ℹ [2021-12-04 23:51:15]: Checking signature database in package.\n## ℹ [2021-12-04 23:51:15]: Checking signature index.\n## ℹ [2021-12-04 23:51:15]: Valid index for db 'legacy':\n## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n## ✓ [2021-12-04 23:51:15]: Database and index checked.\n## ✓ [2021-12-04 23:51:15]: Signature normalized.\n## ℹ [2021-12-04 23:51:15]: Checking row number for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ℹ [2021-12-04 23:51:15]: Checking rownames for catalog matrix and signature matrix.\n## ℹ [2021-12-04 23:51:15]: Matrix V and W don't have same orders. Try reordering...\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ✓ [2021-12-04 23:51:15]: Method 'QP' detected.\n## ✓ [2021-12-04 23:51:15]: Corresponding function generated.\n## ℹ [2021-12-04 23:51:15]: Calling function.\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A8-A09G-01A-21W-A019-09\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: Generating output signature exposures.\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: 0.034 secs elapsed.\n##           TCGA-A8-A09G-01A-21W-A019-09\n## COSMIC_1                      0.067832\n## COSMIC_2                      0.356202\n## COSMIC_3                      0.000000\n## COSMIC_4                      0.000000\n## COSMIC_5                      0.000000\n## COSMIC_6                      0.000000\n## COSMIC_7                      0.013747\n## COSMIC_8                      0.000000\n## COSMIC_9                      0.000000\n## COSMIC_10                     0.010040\n## COSMIC_11                     0.000000\n## COSMIC_12                     0.030987\n## COSMIC_13                     0.471423\n## COSMIC_14                     0.000000\n## COSMIC_15                     0.000000\n## COSMIC_16                     0.000000\n## COSMIC_17                     0.015626\n## COSMIC_18                     0.000000\n## COSMIC_19                     0.000000\n## COSMIC_20                     0.000000\n## COSMIC_21                     0.000000\n## COSMIC_22                     0.000000\n## COSMIC_23                     0.000000\n## COSMIC_24                     0.033851\n## COSMIC_25                     0.000000\n## COSMIC_26                     0.000000\n## COSMIC_27                     0.000000\n## COSMIC_28                     0.000000\n## COSMIC_29                     0.000000\n## COSMIC_30                     0.000292\nsig_fit(t(mt_tally$nmf_matrix[1:5, ]), sig_index = 1:30, return_class = \"data.table\", rel_threshold = 0.05)\n## ℹ [2021-12-04 23:51:15]: Started.\n## ✓ [2021-12-04 23:51:15]: Signature index detected.\n## ℹ [2021-12-04 23:51:15]: Checking signature database in package.\n## ℹ [2021-12-04 23:51:15]: Checking signature index.\n## ℹ [2021-12-04 23:51:15]: Valid index for db 'legacy':\n## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n## ✓ [2021-12-04 23:51:15]: Database and index checked.\n## ✓ [2021-12-04 23:51:15]: Signature normalized.\n## ℹ [2021-12-04 23:51:15]: Checking row number for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ℹ [2021-12-04 23:51:15]: Checking rownames for catalog matrix and signature matrix.\n## ℹ [2021-12-04 23:51:15]: Matrix V and W don't have same orders. Try reordering...\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ✓ [2021-12-04 23:51:15]: Method 'QP' detected.\n## ✓ [2021-12-04 23:51:15]: Corresponding function generated.\n## ℹ [2021-12-04 23:51:15]: Calling function.\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A1-A0SH-01A-11D-A099-09\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A2-A04N-01A-11D-A10Y-09\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A2-A0CP-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A2-A0EP-01A-52D-A22X-09\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A2-A0EV-01A-11W-A050-09\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: Generating output signature exposures.\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: 0.054 secs elapsed.\n##                          sample  COSMIC_1  COSMIC_2 COSMIC_3 COSMIC_4 COSMIC_5\n## 1: TCGA-A1-A0SH-01A-11D-A099-09  0.000000 37.420603 13.78689 0.000000        0\n## 2: TCGA-A2-A04N-01A-11D-A10Y-09 20.039543  2.888675  0.00000 0.000000        0\n## 3: TCGA-A2-A0CP-01A-11W-A050-09  3.648658  0.000000  0.00000 7.083113        0\n## 4: TCGA-A2-A0EP-01A-52D-A22X-09  0.000000  0.000000  0.00000 2.492218        0\n## 5: TCGA-A2-A0EV-01A-11W-A050-09  6.458422  0.000000 14.83102 0.000000        0\n##    COSMIC_6  COSMIC_7 COSMIC_8 COSMIC_9 COSMIC_10 COSMIC_11 COSMIC_12 COSMIC_13\n## 1: 12.93472 21.332013  0.00000        0  0.000000         0  0.000000 31.306430\n## 2:  0.00000  6.865345 12.11501        0  0.000000         0  0.000000  0.000000\n## 3:  0.00000 10.348536  0.00000        0  0.000000         0  0.000000  0.000000\n## 4:  0.00000  2.156319  0.00000        0  0.000000         0  1.334731  4.654227\n## 5: 14.78142 21.963952  0.00000        0  7.978962         0  0.000000  5.713563\n##    COSMIC_14 COSMIC_15 COSMIC_16 COSMIC_17 COSMIC_18 COSMIC_19 COSMIC_20\n## 1:  0.000000   0.00000         0         0 12.007682         0  0.000000\n## 2:  0.000000   0.00000         0         0  0.000000         0  7.516444\n## 3:  0.000000  18.37734         0         0  4.384106         0  0.000000\n## 4:  6.728415   0.00000         0         0  0.000000         0  0.000000\n## 5:  0.000000   0.00000         0         0  0.000000         0  0.000000\n##    COSMIC_21 COSMIC_22 COSMIC_23 COSMIC_24 COSMIC_25 COSMIC_26 COSMIC_27\n## 1:  0.000000         0   0.00000         0         0         0         0\n## 2:  0.000000         0   0.00000         0         0         0         0\n## 3:  0.000000         0   0.00000         0         0         0         0\n## 4:  0.000000         0   1.26778         0         0         0         0\n## 5:  4.311951         0   0.00000         0         0         0         0\n##    COSMIC_28 COSMIC_29 COSMIC_30\n## 1:         0  0.000000         0\n## 2:         0  0.000000         0\n## 3:         0  4.776321         0\n## 4:         0  0.000000         0\n## 5:         0  0.000000         0"},{"path":"basic-workflow.html","id":"fit-custom-signatures","chapter":"3 Mutational signature analysis basics","heading":"3.5.2 Fit custom signatures","text":"already determined SBS signatures . can set sig option.","code":"\nsig_fit(example_mat, sig = mt_sig2)\n## ℹ [2021-12-04 23:51:15]: Started.\n## ℹ [2021-12-04 23:51:15]: Signature index not detected.\n## ✓ [2021-12-04 23:51:15]: Signature object detected.\n## ✓ [2021-12-04 23:51:15]: Database and index checked.\n## ✓ [2021-12-04 23:51:15]: Signature normalized.\n## ℹ [2021-12-04 23:51:15]: Checking row number for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ℹ [2021-12-04 23:51:15]: Checking rownames for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:15]: Checked.\n## ✓ [2021-12-04 23:51:15]: Method 'QP' detected.\n## ✓ [2021-12-04 23:51:15]: Corresponding function generated.\n## ℹ [2021-12-04 23:51:15]: Calling function.\n## ℹ [2021-12-04 23:51:15]: Fitting sample: TCGA-A8-A09G-01A-21W-A019-09\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: Generating output signature exposures.\n## ✓ [2021-12-04 23:51:15]: Done.\n## ℹ [2021-12-04 23:51:15]: 0.03 secs elapsed.\n##      TCGA-A8-A09G-01A-21W-A019-09\n## Sig1                            0\n## Sig2                            0\n## Sig3                          357"},{"path":"basic-workflow.html","id":"performance-comparison","chapter":"3 Mutational signature analysis basics","heading":"3.5.3 Performance comparison","text":"Now can use sig_fit getting optimal exposures, can compare RSS raw matrix reconstructed matrix either NMF sig_fit()..e. \\[\nRSS = \\sum(\\hat H - H)^2\n\\]","code":"\n## Exposure got from NMF\nsum((apply(mt_sig2$Signature, 2, function(x) x / sum(x)) %*% mt_sig2$Exposure - t(mt_tally$nmf_matrix))^2)\n## [1] 8890.449\n## Exposure optimized by sig_fit\nH_estimate <- apply(mt_sig2$Signature, 2, function(x) x / sum(x)) %*% sig_fit(t(mt_tally$nmf_matrix), sig = mt_sig2)\n## ℹ [2021-12-04 23:51:16]: Started.\n## ℹ [2021-12-04 23:51:16]: Signature index not detected.\n## ✓ [2021-12-04 23:51:16]: Signature object detected.\n## ✓ [2021-12-04 23:51:16]: Database and index checked.\n## ✓ [2021-12-04 23:51:16]: Signature normalized.\n## ℹ [2021-12-04 23:51:16]: Checking row number for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:16]: Checked.\n## ℹ [2021-12-04 23:51:16]: Checking rownames for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:16]: Checked.\n## ✓ [2021-12-04 23:51:16]: Method 'QP' detected.\n## ✓ [2021-12-04 23:51:16]: Corresponding function generated.\n## ℹ [2021-12-04 23:51:16]: Calling function.\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A1-A0SH-01A-11D-A099-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A04N-01A-11D-A10Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A0CP-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A0EP-01A-52D-A22X-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A0EV-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A0SX-01A-12D-A099-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A0T7-01A-21D-A099-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A0YF-01A-21D-A10G-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A25F-01A-11D-A167-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A3XW-01A-11D-A23C-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A2-A4S1-01A-21D-A25Q-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A7-A0D9-01A-31W-A071-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A7-A13F-01A-11D-A12Q-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A7-A5ZV-01A-11D-A28B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A06P-01A-11W-A019-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A076-01A-21W-A019-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A07W-01A-11W-A019-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A084-01A-21W-A019-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A08S-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A09G-01A-21W-A019-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A0A4-01A-11W-A019-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A0AB-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AC-A2B8-01A-11D-A17D-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AC-A2FO-01A-11D-A17W-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AC-A3YI-01A-21D-A23C-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AC-A8OS-01A-12D-A41F-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AN-A0FK-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AN-A0FT-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AN-A0XO-01A-11D-A10G-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AO-A1KS-01A-11D-A13L-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AQ-A54O-01A-11D-A25Q-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AQ-A7U7-01A-22D-A351-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A0TP-01A-11D-A099-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A0U3-01A-11D-A10G-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A1AH-01A-11D-A12B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A1AJ-01A-21D-A12Q-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A1AN-01A-11D-A12Q-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A24N-01A-11D-A167-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A252-01A-11D-A167-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A2LL-01A-11D-A17W-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-AR-A2LO-01A-31D-A18P-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A0IE-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A0IM-01A-11W-A050-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A0IP-01A-11D-A045-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A0RV-01A-11D-A099-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A0WZ-01A-11D-A10G-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A0X1-01A-11D-A10G-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A1KC-01B-11D-A159-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A401-01A-11D-A23C-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-B6-A40C-01A-11D-A23C-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A0AV-01A-31D-A10Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A0BT-01A-11D-A12Q-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A0DL-01A-11D-A10Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A0DO-01B-11D-A12B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A0DT-01A-21D-A12B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A0GY-01A-11W-A071-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A0H6-01A-21W-A071-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A18K-01A-11D-A12B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A1FU-01A-11D-A14G-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A202-01A-11D-A14K-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A5IZ-01A-11D-A27P-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A6R8-01A-21D-A33E-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-BH-A8G0-01A-11D-A351-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-C8-A131-01A-11D-A10Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A147-01A-11D-A10Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1JG-01B-11D-A13L-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1JH-01A-11D-A188-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1JJ-01A-31D-A14K-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1JT-01A-31D-A13L-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1JU-01A-11D-A13L-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1X7-01A-11D-A14K-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1X8-01A-11D-A14K-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A1XL-01A-11D-A14K-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-D8-A27V-01A-12D-A17D-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A108-01A-13D-A10M-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A10F-01A-11D-A10M-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A14T-01A-11D-A10Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A152-01A-11D-A12B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A15D-01A-11D-A10Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A15L-01A-11D-A12B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A1BD-01A-11D-A12Q-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A1IH-01A-11D-A188-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A1II-01A-11D-A142-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A1IJ-01A-11D-A142-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A1L6-01A-11D-A13L-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E2-A9RU-01A-11D-A41F-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E9-A1NE-01A-21D-A14K-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E9-A22A-01A-11D-A159-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E9-A22E-01A-11D-A159-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E9-A3QA-01A-61D-A228-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-E9-A5FL-01A-11D-A27P-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-EW-A1PA-01A-11D-A142-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-EW-A1PH-01A-11D-A14K-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-GM-A2DB-01A-31D-A19Y-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-LD-A9QF-01A-32D-A41F-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-LL-A5YP-01A-21D-A28B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-LL-A73Z-01A-11D-A32I-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-OL-A5RY-01A-21D-A28B-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-PE-A5DD-01A-12D-A27P-09\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-S3-AA17-01A-11D-A41F-09\n## ✓ [2021-12-04 23:51:16]: Done.\n## ℹ [2021-12-04 23:51:16]: Generating output signature exposures.\n## ✓ [2021-12-04 23:51:16]: Done.\n## ℹ [2021-12-04 23:51:16]: 0.19 secs elapsed.\nH_estimate <- apply(H_estimate, 2, function(x) ifelse(is.nan(x), 0, x))\nH_real <- t(mt_tally$nmf_matrix)\nsum((H_estimate - H_real)^2)\n## [1] 8237.832"},{"path":"basic-workflow.html","id":"estimate-exposureactivity-stability-by-bootstrapping","chapter":"3 Mutational signature analysis basics","heading":"3.5.4 Estimate exposure/activity stability by bootstrapping","text":"feature based sig_fit(), uses resampling data original input runs sig_fit() multiple times estimate exposure. Bootstrapped replicates >= 100 recommended, just use 10 times illustration.can plot result easily functions provided sigminer.P values calculated specified relative exposure cutoff (0.05 default).","code":"\nbt_result <- sig_fit_bootstrap_batch(example_mat, sig = mt_sig2, n = 10)\n## ℹ [2021-12-04 23:51:16]: Batch Bootstrap Signature Exposure Analysis Started.\n## ℹ [2021-12-04 23:51:16]: Samples to be filtered out:\n## ℹ [2021-12-04 23:51:16]: Finding optimal exposures (&errors) for different methods.\n## ℹ [2021-12-04 23:51:16]: Calling method `QP`.\n## ℹ [2021-12-04 23:51:16]: Started.\n## ℹ [2021-12-04 23:51:16]: Signature index not detected.\n## ✓ [2021-12-04 23:51:16]: Signature object detected.\n## ✓ [2021-12-04 23:51:16]: Database and index checked.\n## ✓ [2021-12-04 23:51:16]: Signature normalized.\n## ℹ [2021-12-04 23:51:16]: Checking row number for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:16]: Checked.\n## ℹ [2021-12-04 23:51:16]: Checking rownames for catalog matrix and signature matrix.\n## ✓ [2021-12-04 23:51:16]: Checked.\n## ✓ [2021-12-04 23:51:16]: Method 'QP' detected.\n## ✓ [2021-12-04 23:51:16]: Corresponding function generated.\n## ℹ [2021-12-04 23:51:16]: Calling function.\n## ℹ [2021-12-04 23:51:16]: Fitting sample: TCGA-A8-A09G-01A-21W-A019-09\n## ✓ [2021-12-04 23:51:16]: Done.\n## ℹ [2021-12-04 23:51:16]: Generating output signature exposures.\n## ✓ [2021-12-04 23:51:16]: Done.\n## ℹ [2021-12-04 23:51:16]: Calculating errors (Frobenius Norm).\n## ✓ [2021-12-04 23:51:16]: Done.\n## ℹ [2021-12-04 23:51:16]: 0.045 secs elapsed.\n## ℹ [2021-12-04 23:51:16]: Getting bootstrap exposures (&errors/similarity) for different methods.\n## ℹ [2021-12-04 23:51:16]: This step is time consuming, please be patient.\n## ℹ [2021-12-04 23:51:16]: Processing sample `TCGA-A8-A09G-01A-21W-A019-09`.\n## ✓ [2021-12-04 23:51:17]: Gotten.\n## ℹ [2021-12-04 23:51:17]: Reporting p values...\n## ℹ [2021-12-04 23:51:17]: Started.\n## ✓ [2021-12-04 23:51:17]: Batch mode enabled.\n## ✓ [2021-12-04 23:51:17]: Done.\n## ℹ [2021-12-04 23:51:17]: 0.016 secs elapsed.\n## ✓ [2021-12-04 23:51:17]: Done.\n## ℹ [2021-12-04 23:51:17]: Cleaning results...\n## ✓ [2021-12-04 23:51:17]: Outputing.\n## ℹ [2021-12-04 23:51:17]: Total 1.181 secs elapsed.\nbt_result\n## $expo\n##     method                       sample  sig   exposure    type\n##  1:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.000000 optimal\n##  2:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   0.000000 optimal\n##  3:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 357.000000 optimal\n##  4:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.571227   Rep_1\n##  5:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2  11.191972   Rep_1\n##  6:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 345.236801   Rep_1\n##  7:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1  10.758870   Rep_2\n##  8:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   0.000000   Rep_2\n##  9:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 346.241130   Rep_2\n## 10:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.000000   Rep_3\n## 11:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   2.037155   Rep_3\n## 12:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 354.962845   Rep_3\n## 13:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.000000   Rep_4\n## 14:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   0.000000   Rep_4\n## 15:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 357.000000   Rep_4\n## 16:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.973130   Rep_5\n## 17:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   2.350855   Rep_5\n## 18:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 353.676014   Rep_5\n## 19:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   5.262795   Rep_6\n## 20:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2  12.971145   Rep_6\n## 21:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 338.766060   Rep_6\n## 22:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.000000   Rep_7\n## 23:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   0.000000   Rep_7\n## 24:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 357.000000   Rep_7\n## 25:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.917790   Rep_8\n## 26:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   0.384690   Rep_8\n## 27:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 355.697520   Rep_8\n## 28:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.000000   Rep_9\n## 29:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2  13.629205   Rep_9\n## 30:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 343.370795   Rep_9\n## 31:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig1   0.000000  Rep_10\n## 32:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig2   0.000000  Rep_10\n## 33:     QP TCGA-A8-A09G-01A-21W-A019-09 Sig3 357.000000  Rep_10\n##     method                       sample  sig   exposure    type\n## \n## $error\n##     method                       sample errors    type\n##  1:     QP TCGA-A8-A09G-01A-21W-A019-09 18.313 optimal\n##  2:     QP TCGA-A8-A09G-01A-21W-A019-09 18.930   Rep_1\n##  3:     QP TCGA-A8-A09G-01A-21W-A019-09 18.824   Rep_2\n##  4:     QP TCGA-A8-A09G-01A-21W-A019-09 18.353   Rep_3\n##  5:     QP TCGA-A8-A09G-01A-21W-A019-09 18.313   Rep_4\n##  6:     QP TCGA-A8-A09G-01A-21W-A019-09 18.392   Rep_5\n##  7:     QP TCGA-A8-A09G-01A-21W-A019-09 19.563   Rep_6\n##  8:     QP TCGA-A8-A09G-01A-21W-A019-09 18.313   Rep_7\n##  9:     QP TCGA-A8-A09G-01A-21W-A019-09 18.337   Rep_8\n## 10:     QP TCGA-A8-A09G-01A-21W-A019-09 19.122   Rep_9\n## 11:     QP TCGA-A8-A09G-01A-21W-A019-09 18.313  Rep_10\n## \n## $cosine\n##     method                       sample   cosine    type\n##  1:     QP TCGA-A8-A09G-01A-21W-A019-09 0.988618 optimal\n##  2:     QP TCGA-A8-A09G-01A-21W-A019-09 0.989479   Rep_1\n##  3:     QP TCGA-A8-A09G-01A-21W-A019-09 0.966835   Rep_2\n##  4:     QP TCGA-A8-A09G-01A-21W-A019-09 0.972369   Rep_3\n##  5:     QP TCGA-A8-A09G-01A-21W-A019-09 0.971626   Rep_4\n##  6:     QP TCGA-A8-A09G-01A-21W-A019-09 0.982418   Rep_5\n##  7:     QP TCGA-A8-A09G-01A-21W-A019-09 0.984565   Rep_6\n##  8:     QP TCGA-A8-A09G-01A-21W-A019-09 0.984212   Rep_7\n##  9:     QP TCGA-A8-A09G-01A-21W-A019-09 0.982291   Rep_8\n## 10:     QP TCGA-A8-A09G-01A-21W-A019-09 0.987838   Rep_9\n## 11:     QP TCGA-A8-A09G-01A-21W-A019-09 0.974672  Rep_10\n## \n## $p_val\n##                          sample method threshold  sig      p_value\n## 1: TCGA-A8-A09G-01A-21W-A019-09     QP      0.05 Sig1 9.999999e-01\n## 2: TCGA-A8-A09G-01A-21W-A019-09     QP      0.05 Sig2 9.999783e-01\n## 3: TCGA-A8-A09G-01A-21W-A019-09     QP      0.05 Sig3 4.978413e-17\nshow_sig_bootstrap_exposure(bt_result, sample = \"TCGA-A8-A09G-01A-21W-A019-09\")\n## ℹ [2021-12-04 23:51:17]: Started.\n## ℹ [2021-12-04 23:51:17]: Plotting.\n## ℹ [2021-12-04 23:51:18]: 0.064 secs elapsed.\nshow_sig_bootstrap_error(bt_result, sample = \"TCGA-A8-A09G-01A-21W-A019-09\")\n## ℹ [2021-12-04 23:51:18]: Started.\n## ℹ [2021-12-04 23:51:18]: Plotting.\n## ℹ [2021-12-04 23:51:18]: 0.043 secs elapsed.\nshow_sig_bootstrap_stability(bt_result)\n## ℹ [2021-12-04 23:51:18]: Started.\n## ℹ [2021-12-04 23:51:18]: Plotting.\n## ℹ [2021-12-04 23:51:18]: 0.037 secs elapsed."},{"path":"analysis-supps.html","id":"analysis-supps","chapter":"4 Other signature types","heading":"4 Other signature types","text":"","code":""},{"path":"analysis-supps.html","id":"copy-number-signature-wang-et-al","chapter":"4 Other signature types","heading":"4.1 Copy number signature (Wang et al)","text":"","code":""},{"path":"analysis-supps.html","id":"read-data","chapter":"4 Other signature types","heading":"4.1.1 Read data","text":"input requires absolute copy number profile following information:Segment chromosome.Segment start.Segment end.Absolute copy number value segment: must integer.Sample ID.input data can result software provides information .Useful softwares listed :ABSOLUTE.SequenzaFACETSPennCNV & ASCATCNVkitUseful analysis reference:Prostate Cancer Variation Signature Analysis ReportThe import work done read_copynumber(), supports data.frame file, even result directory ABSOLUTE.Option sigminer.sex used control processing sex. don’t care sex chromosomes (.e. X Y),\ncan ignore setting removing X/Y segments, otherwise summary result cn tally process may biased.Currently, can refer extract_facets_cnv() extract_seqz_cnv() https://github.com/ShixiangWang/prad_signature/blob/master/analysis/src/99-functions.R \nsee get tidy data result directory FACETS Sequenza.\n## Tally ComponentsCurrently, two methods generating sample--component matrix.Option sigminer.copynumber.max used control processing max copy number values. Run ?sig_tally see .can set options(sigminer.sex = \"male\", sigminer.copynumber.max = 20) top code\navoid setting two places.note, sigminer.copynumber.max option effect sig_tally() method “W”,\nsigminer.sex option effects read_copynumber() sig_tally() method “W”.step return list containing information copy number features, components matrix NMF etc.","code":"\n## Default is \"female\"\n## You can ignore the setting if all samples are females\n## But we recommend you set it\noptions(sigminer.sex = \"male\")\n## For cohort contains both males and females,\n## set a data.frame with two columns, i.e.\n## options(sigminer.sex = sex_df),\n## which\n## sex_df = data.frame(sample = c(\"sample1\", \"sample2\",\n##                     sex = \"female\", \"male\"))\n# Load toy dataset of absolute copynumber profile\nload(system.file(\"extdata\", \"toy_segTab.RData\",\n  package = \"sigminer\", mustWork = TRUE\n))\ncn <- read_copynumber(segTabs,\n  seg_cols = c(\"chromosome\", \"start\", \"end\", \"segVal\"),\n  genome_build = \"hg19\", complement = FALSE, verbose = TRUE\n)\n## ℹ [2021-12-04 23:51:19]: Started.\n## ℹ [2021-12-04 23:51:19]: Genome build  : hg19.\n## ℹ [2021-12-04 23:51:19]: Genome measure: called.\n## ✓ [2021-12-04 23:51:19]: Chromosome size database for build obtained.\n## ℹ [2021-12-04 23:51:19]: Reading input.\n## ✓ [2021-12-04 23:51:19]: A data frame as input detected.\n## ✓ [2021-12-04 23:51:19]: Column names checked.\n## ✓ [2021-12-04 23:51:19]: Column order set.\n## ✓ [2021-12-04 23:51:19]: Chromosomes unified.\n## ✓ [2021-12-04 23:51:19]: Data imported.\n## ℹ [2021-12-04 23:51:19]: Segments info:\n## ℹ [2021-12-04 23:51:19]:     Keep - 467\n## ℹ [2021-12-04 23:51:19]:     Drop - 0\n## ✓ [2021-12-04 23:51:19]: Segments sorted.\n## ℹ [2021-12-04 23:51:19]: Joining adjacent segments with same copy number value. Be patient...\n## ✓ [2021-12-04 23:51:19]: 400 segments left after joining.\n## ✓ [2021-12-04 23:51:19]: Segmental table cleaned.\n## ℹ [2021-12-04 23:51:19]: Annotating.\n## ✓ [2021-12-04 23:51:19]: Annotation done.\n## ℹ [2021-12-04 23:51:19]: Summarizing per sample.\n## ✓ [2021-12-04 23:51:19]: Summarized.\n## ℹ [2021-12-04 23:51:19]: Generating CopyNumber object.\n## ✓ [2021-12-04 23:51:19]: Generated.\n## ℹ [2021-12-04 23:51:19]: Validating object.\n## ✓ [2021-12-04 23:51:19]: Done.\n## ℹ [2021-12-04 23:51:19]: 0.167 secs elapsed.\ncn\n## An object of class CopyNumber \n## =============================\n##                           sample n_of_seg n_of_cnv n_of_amp n_of_del n_of_vchr\n##  1: TCGA-DF-A2KN-01A-11D-A17U-01       33        6        5        1         4\n##  2: TCGA-19-2621-01B-01D-0911-01       33        8        5        3         5\n##  3: TCGA-B6-A0X5-01A-21D-A107-01       28        8        4        4         2\n##  4: TCGA-A8-A07S-01A-11D-A036-01       38       11        2        9         4\n##  5: TCGA-26-6174-01A-21D-1842-01       43       13        8        5         8\n##  6: TCGA-CV-7432-01A-11D-2128-01       40       16        7        9         9\n##  7: TCGA-06-0644-01A-02D-0310-01       46       19        5       14         8\n##  8: TCGA-A5-A0G2-01A-11D-A042-01       39       21        5       16        10\n##  9: TCGA-99-7458-01A-11D-2035-01       48       26       10       16        13\n## 10: TCGA-05-4417-01A-22D-1854-01       52       37       33        4        17\n##     cna_burden\n##  1:      0.000\n##  2:      0.099\n##  3:      0.087\n##  4:      0.112\n##  5:      0.119\n##  6:      0.198\n##  7:      0.165\n##  8:      0.393\n##  9:      0.318\n## 10:      0.654\n## Even you set max_copynumber = 20 in read_copynumber(),\n## the segmental copy number may be greater than 20\n## because for male samples, the X/Y segmental copy number\n## values will be doubled in tally process.\n## This setting will make copy number values of all segments\n## not greater than 20.\noptions(sigminer.copynumber.max = 20)\n# Load copy number object\nload(system.file(\"extdata\", \"toy_copynumber.RData\",\n  package = \"sigminer\", mustWork = TRUE\n))\n# Use method designed by Wang, Shixiang et al.\ncn_tally_W <- sig_tally(cn, method = \"W\")"},{"path":"analysis-supps.html","id":"extract-signatures","chapter":"4 Other signature types","heading":"4.1.2 Extract signatures","text":"get matrix, can just signature extraction SBS etc. signatures. won’t talk much.","code":"\ncn_tally_W$nmf_matrix[1:5, 1:5]\n##                              BP10MB[0] BP10MB[1] BP10MB[2] BP10MB[3] BP10MB[4]\n## TCGA-05-4417-01A-22D-1854-01       275        20         5         0         0\n## TCGA-06-0644-01A-02D-0310-01       289         5         4         0         1\n## TCGA-19-2621-01B-01D-0911-01       294         2         3         1         0\n## TCGA-26-6174-01A-21D-1842-01       288         4         7         1         0\n## TCGA-99-7458-01A-11D-2035-01       284         9         5         1         1\n# library(NMF)\nsig_w <- sig_extract(cn_tally_W$nmf_matrix, n_sig = 2)"},{"path":"analysis-supps.html","id":"allele-specific-copy-number-signature-steele-et-al","chapter":"4 Other signature types","heading":"4.2 Allele specific copy number signature (Steele et al)","text":"Previously described steps can also applied allele specific copy number\nprofile Steele et al approach. two catalog methods provided \nSteele et al: 40 catalogs 48 catalogs. current stage, 48 catalog \nrecommended ~20 reference signatures built ~10,000 TCGA tumors.\nreference example given :","code":"# Generate example data\nload(system.file(\"extdata\", \"toy_segTab.RData\",\n  package = \"sigminer\", mustWork = TRUE\n))\nset.seed(1234)\n# Make sure minor_cn is provided\nsegTabs$minor_cn <- sample(c(0, 1), size = nrow(segTabs), replace = TRUE)\ncn2 <- read_copynumber(segTabs,\n  seg_cols = c(\"chromosome\", \"start\", \"end\", \"segVal\"),\n  genome_measure = \"wg\", complement = TRUE, add_loh = TRUE\n)\n## ℹ [2022-08-29 11:59:13]: Started.\n## ℹ [2022-08-29 11:59:13]: Genome build  : hg19.\n## ℹ [2022-08-29 11:59:13]: Genome measure: wg.\n## ℹ [2022-08-29 11:59:13]: When add_loh is TRUE, use_all is forced to TRUE.\n## Please drop columns you don't want to keep before reading.\n## ✔ [2022-08-29 11:59:13]: Chromosome size database for build obtained.\n## ℹ [2022-08-29 11:59:13]: Reading input.\n## ✔ [2022-08-29 11:59:13]: A data frame as input detected.\n## ✔ [2022-08-29 11:59:13]: Column names checked.\n## ✔ [2022-08-29 11:59:13]: Column order set.\n## ✔ [2022-08-29 11:59:13]: Chromosomes unified.\n## ✔ [2022-08-29 11:59:13]: Value 2 (normal copy) filled to uncalled chromosomes.\n## ✔ [2022-08-29 11:59:13]: Data imported.\n## ℹ [2022-08-29 11:59:13]: Segments info:\n## ℹ [2022-08-29 11:59:13]:     Keep - 477\n## ℹ [2022-08-29 11:59:13]:     Drop - 0\n## ✔ [2022-08-29 11:59:13]: Segments sorted.\n## ℹ [2022-08-29 11:59:13]: Adding LOH labels...\n## ℹ [2022-08-29 11:59:13]: Joining adjacent segments with same copy number value. Be patient...\n## ✔ [2022-08-29 11:59:13]: 410 segments left after joining.\n## ✔ [2022-08-29 11:59:13]: Segmental table cleaned.\n## ℹ [2022-08-29 11:59:13]: Annotating.\n## ✔ [2022-08-29 11:59:13]: Annotation done.\n## ℹ [2022-08-29 11:59:13]: Summarizing per sample.\n## ✔ [2022-08-29 11:59:13]: Summarized.\n## ℹ [2022-08-29 11:59:13]: Generating CopyNumber object.\n## ✔ [2022-08-29 11:59:13]: Generated.\n## ℹ [2022-08-29 11:59:13]: Validating object.\n## ✔ [2022-08-29 11:59:13]: Done.\n## ℹ [2022-08-29 11:59:13]: 0.454 secs elapsed.\n\n# Use tally method \"S\" (Steele et al.)\ntally_s2 <- sig_tally(cn2, method = \"S\")\n## ℹ [2022-08-29 11:59:13]: Started.\n## ℹ [2022-08-29 11:59:13]: When you use method 'S', please make sure you have set 'join_adj_seg' to FALSE and 'add_loh' to TRUE in 'read_copynumber() in the previous step!\n## ✔ [2022-08-29 11:59:13]: Matrix generated.\n## ℹ [2022-08-29 11:59:13]: 0.05 secs elapsed.\n\ncn_sig2 <- sig_extract(tally_s2$all_matrices$CN_48, n_sig = 2)\n## NMF algorithm: 'brunet'\n## Multiple runs: 10\n## Mode: sequential [foreach:doParallelMC]\n## \nRuns: |                                                        \nRuns: |                                                  |   0%\nRuns: |                                                        \nRuns: |=====                                             |   9%\nRuns: |                                                        \nRuns: |=========                                         |  18%\nRuns: |                                                        \nRuns: |==============                                    |  27%\nRuns: |                                                        \nRuns: |==================                                |  36%\nRuns: |                                                        \nRuns: |=======================                           |  45%\nRuns: |                                                        \nRuns: |===========================                       |  55%\nRuns: |                                                        \nRuns: |================================                  |  64%\nRuns: |                                                        \nRuns: |====================================              |  73%\nRuns: |                                                        \nRuns: |=========================================         |  82%\nRuns: |                                                        \nRuns: |=============================================     |  91%\nRuns: |                                                        \nRuns: |==================================================| 100%\n## System time:\n##    user  system elapsed \n##   9.021   0.119   9.163\nget_sig_similarity(cn_sig2, sig_db = \"CNS_TCGA\")\n## -Comparing against COSMIC signatures\n## ------------------------------------\n## --Found Sig1 most similar to CN1\n##    Aetiology: See https://cancer.sanger.ac.uk/signatures/cn/ [similarity: 0.728]\n## --Found Sig2 most similar to CN2\n##    Aetiology: See https://cancer.sanger.ac.uk/signatures/cn/ [similarity: 0.668]\n## ------------------------------------\n## Return result invisiblely."},{"path":"analysis-supps.html","id":"rearrangement-signature","chapter":"4 Other signature types","heading":"4.3 Rearrangement signature","text":"Similarity, know generate matrix genome rearrangement signature,\ncan easily apply signature extraction signature fitting.","code":"\nsv <- readRDS(system.file(\"extdata\", \"toy_sv.rds\", package = \"sigminer\", mustWork = TRUE))\nrs <- read_sv_as_rs(sv)\n## succesfully read RS!\n# svclass is optional\nrs2 <- read_sv_as_rs(sv[, setdiff(colnames(sv), \"svclass\")])\n## succesfully read RS!\nidentical(rs, rs2)\n## [1] TRUE\n\ntally_rs <- sig_tally(rs)\n## ℹ [2022-08-29 11:59:24]: Started.\n## ✔ [2022-08-29 11:59:24]: Successfully get RS list!\n## \n## Attaching package: 'purrr'\n## The following objects are masked from 'package:foreach':\n## \n##     accumulate, when\n## The following object is masked from 'package:XVector':\n## \n##     compact\n## The following object is masked from 'package:GenomicRanges':\n## \n##     reduce\n## The following object is masked from 'package:IRanges':\n## \n##     reduce\n## [1] \"Getting clustered info...\"\n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 10p \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 12q \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18p \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 19p \n## pcf finished for chromosome arm 19q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20p \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 3q \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xp \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 21q \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 1q \n## pcf finished for chromosome arm 10p \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 12q \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16p \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 19q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 21p \n## pcf finished for chromosome arm 21q \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 3q \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xp \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 1q \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16p \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18p \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 19p \n## pcf finished for chromosome arm 19q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20p \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 21q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 3q \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 1q \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 12q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16p \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20p \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 21q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 3q \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 1q \n## pcf finished for chromosome arm 10p \n## pcf finished for chromosome arm 11p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xp \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 21p \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 1q \n## pcf finished for chromosome arm 10p \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 12q \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16p \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18p \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 19p \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 3q \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xp \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 1q \n## pcf finished for chromosome arm 10p \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 12q \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16p \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 19p \n## pcf finished for chromosome arm 19q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20p \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 21q \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xp \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm Yq \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 1q \n## pcf finished for chromosome arm 10p \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 12q \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16p \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18p \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 19p \n## pcf finished for chromosome arm 19q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20p \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 21q \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xp \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 10q \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 12p \n## pcf finished for chromosome arm 12q \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 19p \n## pcf finished for chromosome arm 19q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 3q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm 1p \n## pcf finished for chromosome arm 11q \n## pcf finished for chromosome arm 13q \n## pcf finished for chromosome arm 14q \n## pcf finished for chromosome arm 15q \n## pcf finished for chromosome arm 16p \n## pcf finished for chromosome arm 16q \n## pcf finished for chromosome arm 17p \n## pcf finished for chromosome arm 17q \n## pcf finished for chromosome arm 18p \n## pcf finished for chromosome arm 18q \n## pcf finished for chromosome arm 19p \n## pcf finished for chromosome arm 19q \n## pcf finished for chromosome arm 2p \n## pcf finished for chromosome arm 2q \n## pcf finished for chromosome arm 20p \n## pcf finished for chromosome arm 20q \n## pcf finished for chromosome arm 21p \n## pcf finished for chromosome arm 21q \n## pcf finished for chromosome arm 22q \n## pcf finished for chromosome arm 3p \n## pcf finished for chromosome arm 3q \n## pcf finished for chromosome arm 4p \n## pcf finished for chromosome arm 4q \n## pcf finished for chromosome arm 5p \n## pcf finished for chromosome arm 5q \n## pcf finished for chromosome arm 6p \n## pcf finished for chromosome arm 6q \n## pcf finished for chromosome arm 7p \n## pcf finished for chromosome arm 7q \n## pcf finished for chromosome arm 8p \n## pcf finished for chromosome arm 8q \n## pcf finished for chromosome arm 9p \n## pcf finished for chromosome arm 9q \n## pcf finished for chromosome arm Xp \n## pcf finished for chromosome arm Xq \n## pcf finished for chromosome arm Yp \n## pcf finished for chromosome arm Yq \n## [1] \"Getting type of segment ...\"\n## [1] \"Getting distance of two rearrange segments ...\"\n## ✔ [2022-08-29 11:59:28]: Successfully get RS features!\n## ✔ [2022-08-29 11:59:28]: Successfully get RS component!\n## ✔ [2022-08-29 11:59:28]: Successfully get RS matrix!\n## ℹ [2022-08-29 11:59:28]: 3.937 secs elapsed.\nstr(tally_rs)\n## List of 4\n##  $ features    :List of 3\n##   ..$ clustered:Classes 'data.table' and 'data.frame':   4220 obs. of  3 variables:\n##   .. ..$ sample: chr [1:4220] \"PD26861a\" \"PD26861a\" \"PD26861a\" \"PD26861a\" ...\n##   .. ..$ value : chr [1:4220] \"non-clustered\" \"non-clustered\" \"non-clustered\" \"non-clustered\" ...\n##   .. ..$ Index : int [1:4220] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. ..- attr(*, \".internal.selfref\")=<externalptr> \n##   ..$ type     :Classes 'data.table' and 'data.frame':   4220 obs. of  3 variables:\n##   .. ..$ sample: chr [1:4220] \"PD26861a\" \"PD26861a\" \"PD26861a\" \"PD26861a\" ...\n##   .. ..$ value : chr [1:4220] \"inv\" \"inv\" \"del\" \"del\" ...\n##   .. ..$ Index : int [1:4220] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. ..- attr(*, \".internal.selfref\")=<externalptr> \n##   ..$ size     :Classes 'data.table' and 'data.frame':   4220 obs. of  3 variables:\n##   .. ..$ sample: chr [1:4220] \"PD26861a\" \"PD26861a\" \"PD26861a\" \"PD26861a\" ...\n##   .. ..$ value : chr [1:4220] \">10Mb\" \"1Mb-10Mb\" \">10Mb\" \"100Kb-1Mb\" ...\n##   .. ..$ Index : int [1:4220] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. ..- attr(*, \".internal.selfref\")=<externalptr> \n##  $ components  :List of 3\n##   ..$ clustered:Classes 'data.table' and 'data.frame':   4220 obs. of  3 variables:\n##   .. ..$ sample     : chr [1:4220] \"PD26861a\" \"PD26861a\" \"PD26861a\" \"PD26861a\" ...\n##   .. ..$ Index      : int [1:4220] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. ..$ C_clustered: Factor w/ 2 levels \"clustered\",\"non-clustered\": 2 2 2 2 2 2 2 2 2 2 ...\n##   .. ..- attr(*, \".internal.selfref\")=<externalptr> \n##   ..$ type     :Classes 'data.table' and 'data.frame':   4220 obs. of  3 variables:\n##   .. ..$ sample: chr [1:4220] \"PD26861a\" \"PD26861a\" \"PD26861a\" \"PD26861a\" ...\n##   .. ..$ Index : int [1:4220] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. ..$ C_type: Factor w/ 4 levels \"del\",\"inv\",\"tds\",..: 2 2 1 1 2 2 1 1 2 3 ...\n##   .. ..- attr(*, \".internal.selfref\")=<externalptr> \n##   ..$ size     :Classes 'data.table' and 'data.frame':   4220 obs. of  3 variables:\n##   .. ..$ sample: chr [1:4220] \"PD26861a\" \"PD26861a\" \"PD26861a\" \"PD26861a\" ...\n##   .. ..$ Index : int [1:4220] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. ..$ C_size: Factor w/ 6 levels \"<1Kb\",\">10Mb\",..: 2 6 2 5 2 2 6 5 5 5 ...\n##   .. ..- attr(*, \".internal.selfref\")=<externalptr> \n##  $ nmf_matrix  : int [1:10, 1:32] 13 3 2 0 1 3 2 11 5 1 ...\n##   ..- attr(*, \"dimnames\")=List of 2\n##   .. ..$ : chr [1:10] \"PD26861a\" \"PD26862a\" \"PD26864a\" \"PD26865a\" ...\n##   .. ..$ : chr [1:32] \"clustered:del:>10Mb\" \"clustered:del:1-10Kb\" \"clustered:del:10-100Kb\" \"clustered:del:100Kb-1Mb\" ...\n##  $ all_matrices:List of 2\n##   ..$ RS_32: int [1:10, 1:32] 13 3 2 0 1 3 2 11 5 1 ...\n##   .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. ..$ : chr [1:10] \"PD26861a\" \"PD26862a\" \"PD26864a\" \"PD26865a\" ...\n##   .. .. ..$ : chr [1:32] \"clustered:del:>10Mb\" \"clustered:del:1-10Kb\" \"clustered:del:10-100Kb\" \"clustered:del:100Kb-1Mb\" ...\n##   ..$ RS_38: int [1:10, 1:38] 0 0 0 0 0 0 0 0 0 0 ...\n##   .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. ..$ : chr [1:10] \"PD26861a\" \"PD26862a\" \"PD26864a\" \"PD26865a\" ...\n##   .. .. ..$ : chr [1:38] \"clustered:del:<1Kb\" \"clustered:del:>10Mb\" \"clustered:del:1-10Kb\" \"clustered:del:10-100Kb\" ..."},{"path":"target-vis.html","id":"target-vis","chapter":"5 Target visualization","heading":"5 Target visualization","text":"","code":""},{"path":"target-vis.html","id":"copynumber-object","chapter":"5 Target visualization","heading":"5.1 CopyNumber object","text":"","code":""},{"path":"target-vis.html","id":"profile","chapter":"5 Target visualization","heading":"5.1.1 Profile","text":"","code":"\nshow_cn_profile(cn, nrow = 2, ncol = 1)\nshow_cn_circos(cn, samples = 1)"},{"path":"target-vis.html","id":"distribution","chapter":"5 Target visualization","heading":"5.1.2 Distribution","text":"","code":"\nshow_cn_distribution(cn, mode = \"ld\")\nshow_cn_distribution(cn, mode = \"cd\")"},{"path":"target-vis.html","id":"signature-object","chapter":"5 Target visualization","heading":"5.2 Signature object","text":"Signature core object sigminer, stores signatures exposures. show plot signature profile exposure profile. result plots basically ggplot based, can edited custom operations ggplot grammar.","code":""},{"path":"target-vis.html","id":"operate-signature","chapter":"5 Target visualization","heading":"5.2.1 Operate Signature","text":"result sig_extract() sig_auto_extract() list Signature class. can use $ use operation function obtain data stored .get signature matrix:get signature exposure matrix:get_sig_exposure() may useful, can used return data.frame set exposure threshold.","code":"\n# Or mt_sig2$Signature\nsig_signature(mt_sig2)[1:5, ]\n##                Sig1        Sig2         Sig3\n## A[T>C]A 0.008632350 0.012998315 0.0027599263\n## C[T>C]A 0.005765919 0.007065285 0.0007488439\n## G[T>C]A 0.013026940 0.004318256 0.0009744887\n## T[T>C]A 0.004725412 0.004544973 0.0012188315\n## A[C>T]A 0.004464683 0.017714329 0.0063508777\n# Or mt_sig$Exposure\nsig_exposure(mt_sig2)[, 1:5]\n##      TCGA-A1-A0SH-01A-11D-A099-09 TCGA-A2-A04N-01A-11D-A10Y-09\n## Sig1                     31.66886                    16.840245\n## Sig2                     17.46182                    31.616889\n## Sig3                     86.66939                     3.141982\n##      TCGA-A2-A0CP-01A-11W-A050-09 TCGA-A2-A0EP-01A-52D-A22X-09\n## Sig1                    23.365351                   14.2720018\n## Sig2                    22.090623                    0.7626465\n## Sig3                     4.622696                    6.8293109\n##      TCGA-A2-A0EV-01A-11W-A050-09\n## Sig1                     35.06135\n## Sig2                     25.81997\n## Sig3                     17.46720\nget_sig_exposure(mt_sig2)\n##                            sample          Sig1          Sig2          Sig3\n##   1: TCGA-A1-A0SH-01A-11D-A099-09  3.166886e+01  1.746182e+01  8.666939e+01\n##   2: TCGA-A2-A04N-01A-11D-A10Y-09  1.684024e+01  3.161689e+01  3.141982e+00\n##   3: TCGA-A2-A0CP-01A-11W-A050-09  2.336535e+01  2.209062e+01  4.622696e+00\n##   4: TCGA-A2-A0EP-01A-52D-A22X-09  1.427200e+01  7.626465e-01  6.829311e+00\n##   5: TCGA-A2-A0EV-01A-11W-A050-09  3.506135e+01  2.581997e+01  1.746720e+01\n##   6: TCGA-A2-A0SX-01A-12D-A099-09  1.799211e+01  1.298242e+01  9.594181e+00\n##   7: TCGA-A2-A0T7-01A-21D-A099-09  5.268863e+00  2.400288e+01  4.272836e-18\n##   8: TCGA-A2-A0YF-01A-21D-A10G-09  1.304188e+01  2.883374e+01 3.092878e-219\n##   9: TCGA-A2-A25F-01A-11D-A167-09  8.954687e+00 2.124482e-322  0.000000e+00\n##  10: TCGA-A2-A3XW-01A-11D-A23C-09  9.992137e+00  8.307369e+00  5.585825e-01\n##  11: TCGA-A2-A4S1-01A-21D-A25Q-09  6.855788e+01  2.385549e+01  4.218989e+00\n##  12: TCGA-A7-A0D9-01A-31W-A071-09  2.789866e+01  1.612393e+01  1.610362e+01\n##  13: TCGA-A7-A13F-01A-11D-A12Q-09 2.218617e-143  7.233318e+01  1.015108e+01\n##  14: TCGA-A7-A5ZV-01A-11D-A28B-09  1.707878e+02  4.282286e+01  3.607406e+01\n##  15: TCGA-A8-A06P-01A-11W-A019-09  2.143307e+01  1.954021e+01  3.290205e+00\n##  16: TCGA-A8-A076-01A-21W-A019-09  3.186376e+01  4.840680e+01  1.219314e+01\n##  17: TCGA-A8-A07W-01A-11W-A019-09  9.941026e+01  4.891769e+01  2.093785e+01\n##  18: TCGA-A8-A084-01A-21W-A019-09  1.860221e+01  3.549728e+01  2.878729e+01\n##  19: TCGA-A8-A08S-01A-11W-A050-09  1.705885e+01  4.703995e+01  2.595490e-14\n##  20: TCGA-A8-A09G-01A-21W-A019-09  3.971052e-87  1.640886e+01  3.009882e+02\n##  21: TCGA-A8-A0A4-01A-11W-A019-09  1.266228e+01  2.461204e+01  8.855363e-01\n##  22: TCGA-A8-A0AB-01A-11W-A050-09  2.161191e+01  1.136710e+01  4.588114e+00\n##  23: TCGA-AC-A2B8-01A-11D-A17D-09 2.033307e-122  2.098482e+01  1.038001e+02\n##  24: TCGA-AC-A2FO-01A-11D-A17W-09  8.304307e+00  5.968893e+00  1.455197e+01\n##  25: TCGA-AC-A3YI-01A-21D-A23C-09  1.166597e+01  8.174477e+00 3.737224e-304\n##  26: TCGA-AC-A8OS-01A-12D-A41F-09  3.226793e+01  2.847194e+01  1.852043e+01\n##  27: TCGA-AN-A0FK-01A-11W-A050-09 4.675220e-136  5.434698e+01 3.013800e-322\n##  28: TCGA-AN-A0FT-01A-11W-A050-09  2.329794e+01  6.405417e+01  3.668331e+01\n##  29: TCGA-AN-A0XO-01A-11D-A10G-09  1.810539e+01  1.288004e+01  1.156616e+01\n##  30: TCGA-AO-A1KS-01A-11D-A13L-09  1.471045e-15  3.636395e+01  1.884661e+01\n##  31: TCGA-AQ-A54O-01A-11D-A25Q-09 1.998371e-110  2.479216e+01  4.475523e-01\n##  32: TCGA-AQ-A7U7-01A-22D-A351-09  1.357465e+01  1.450933e+01  7.322714e+01\n##  33: TCGA-AR-A0TP-01A-11D-A099-09  5.700843e+01  7.538727e+00  5.532723e+00\n##  34: TCGA-AR-A0U3-01A-11D-A10G-09  1.566172e+01  2.445972e+01  0.000000e+00\n##  35: TCGA-AR-A1AH-01A-11D-A12B-09  9.313898e+01  1.664222e+01  7.946685e+00\n##  36: TCGA-AR-A1AJ-01A-21D-A12Q-09  7.732463e+00  2.359439e+01  2.272694e+01\n##  37: TCGA-AR-A1AN-01A-11D-A12Q-09  1.050960e-43  2.694093e+01  6.145010e+00\n##  38: TCGA-AR-A24N-01A-11D-A167-09  1.894249e+01  2.390942e+01  4.230534e+00\n##  39: TCGA-AR-A252-01A-11D-A167-09  6.071164e+00  1.270826e+01 3.013800e-322\n##  40: TCGA-AR-A2LL-01A-11D-A17W-09  1.466495e+01  2.258277e+01 3.013800e-322\n##  41: TCGA-AR-A2LO-01A-31D-A18P-09  1.403040e+01  2.614092e+00  3.231288e+00\n##  42: TCGA-B6-A0IE-01A-11W-A050-09  2.010311e+01  1.958096e+01  2.610397e+00\n##  43: TCGA-B6-A0IM-01A-11W-A050-09  2.075968e+01  1.952527e+01 3.513353e-125\n##  44: TCGA-B6-A0IP-01A-11D-A045-09  1.416886e+01  3.635690e+01  7.257260e-01\n##  45: TCGA-B6-A0RV-01A-11D-A099-09 2.766768e-322  1.812611e+01  4.845000e+01\n##  46: TCGA-B6-A0WZ-01A-11D-A10G-09  7.381598e+00  6.159155e+00  8.056780e+01\n##  47: TCGA-B6-A0X1-01A-11D-A10G-09  4.774611e+01  2.081434e+01  2.141664e+01\n##  48: TCGA-B6-A1KC-01B-11D-A159-09  1.224477e+01  2.235468e+01  6.975468e-01\n##  49: TCGA-B6-A401-01A-11D-A23C-09  1.104261e+01  1.933849e+01  8.745074e-02\n##  50: TCGA-B6-A40C-01A-11D-A23C-09  1.734504e+01  3.269065e+01  2.469909e+00\n##  51: TCGA-BH-A0AV-01A-31D-A10Y-09  6.543456e+01  3.624715e+00  1.540206e+01\n##  52: TCGA-BH-A0BT-01A-11D-A12Q-09  6.306036e+00  3.814813e+01  2.720250e+00\n##  53: TCGA-BH-A0DL-01A-11D-A10Y-09  2.894770e+01  6.846251e+01  2.895576e+01\n##  54: TCGA-BH-A0DO-01B-11D-A12B-09  9.969784e+00  1.446941e+01  5.233825e+00\n##  55: TCGA-BH-A0DT-01A-21D-A12B-09  2.462409e+00  1.154792e+01  1.819875e+00\n##  56: TCGA-BH-A0GY-01A-11W-A071-09  1.621720e+01  2.581025e+01 4.526295e-276\n##  57: TCGA-BH-A0H6-01A-21W-A071-09  1.082937e+01  1.579577e+01 4.340126e-293\n##  58: TCGA-BH-A18K-01A-11D-A12B-09  2.097981e+01  1.462527e+01  3.631013e+01\n##  59: TCGA-BH-A1FU-01A-11D-A14G-09  6.277453e+01  2.878294e+01  2.394254e+01\n##  60: TCGA-BH-A202-01A-11D-A14K-09  6.871836e+00  2.020375e+01  3.928063e-01\n##  61: TCGA-BH-A5IZ-01A-11D-A27P-09  1.246154e+02  2.209061e+01  3.537264e+01\n##  62: TCGA-BH-A6R8-01A-21D-A33E-09  1.164019e+01  2.430453e+01  5.236235e+00\n##  63: TCGA-BH-A8G0-01A-11D-A351-09 2.597199e-102  2.048118e+01  0.000000e+00\n##  64: TCGA-C8-A131-01A-11D-A10Y-09  2.590583e+01  4.370584e+01  3.640790e+00\n##  65: TCGA-D8-A147-01A-11D-A10Y-09  1.161776e+02  5.212590e+00  7.266037e+01\n##  66: TCGA-D8-A1JG-01B-11D-A13L-09  8.471905e+01  6.345205e+01  2.060929e+01\n##  67: TCGA-D8-A1JH-01A-11D-A188-09  9.663174e+00  1.327837e+01  7.873566e-01\n##  68: TCGA-D8-A1JJ-01A-31D-A14K-09  1.133959e+01  3.674766e+01  5.104066e+01\n##  69: TCGA-D8-A1JT-01A-31D-A13L-09  2.090274e+01  2.128976e+01  0.000000e+00\n##  70: TCGA-D8-A1JU-01A-11D-A13L-09  9.091898e+00  1.071928e+01  2.713162e-39\n##  71: TCGA-D8-A1X7-01A-11D-A14K-09  1.294633e+01  1.525286e+01  3.413301e+00\n##  72: TCGA-D8-A1X8-01A-11D-A14K-09  1.448665e+01  1.581697e+01  2.266142e+00\n##  73: TCGA-D8-A1XL-01A-11D-A14K-09  7.589129e+01  2.279192e+01  7.395903e+00\n##  74: TCGA-D8-A27V-01A-12D-A17D-09  3.423782e-80  3.137792e+01  1.880720e+02\n##  75: TCGA-E2-A108-01A-13D-A10M-09  3.632974e+01  1.314449e+01  1.338054e+02\n##  76: TCGA-E2-A10F-01A-11D-A10M-09 2.766768e-322  2.414387e+01  5.123782e+00\n##  77: TCGA-E2-A14T-01A-11D-A10Y-09  1.661234e+01  1.927166e+01  7.476472e+00\n##  78: TCGA-E2-A152-01A-11D-A12B-09  1.171920e-21  1.987249e+01  1.445783e+02\n##  79: TCGA-E2-A15D-01A-11D-A10Y-09  1.162797e+01  2.447046e+01  8.456098e-02\n##  80: TCGA-E2-A15L-01A-11D-A12B-09 6.564409e-266  3.705154e+01  7.227903e+00\n##  81: TCGA-E2-A1BD-01A-11D-A12Q-09  1.347320e+01  2.835382e+01  7.608654e-02\n##  82: TCGA-E2-A1IH-01A-11D-A188-09  1.607014e+01  2.769621e+01  4.043042e+01\n##  83: TCGA-E2-A1II-01A-11D-A142-09  3.287852e+01  1.507799e+00 3.013800e-322\n##  84: TCGA-E2-A1IJ-01A-11D-A142-09  6.353640e+00  1.340142e+01 1.066686e-292\n##  85: TCGA-E2-A1L6-01A-11D-A13L-09  2.115141e-46  2.802838e+01  7.333578e-63\n##  86: TCGA-E2-A9RU-01A-11D-A41F-09  2.027101e+01  6.333655e+01  2.100747e+01\n##  87: TCGA-E9-A1NE-01A-21D-A14K-09  4.944191e+01  5.057375e+00  6.071713e+00\n##  88: TCGA-E9-A22A-01A-11D-A159-09  1.889911e+01  7.690585e+00  1.009118e+01\n##  89: TCGA-E9-A22E-01A-11D-A159-09  9.223014e+01  1.041757e+01  4.455073e+01\n##  90: TCGA-E9-A3QA-01A-61D-A228-09  3.257514e+01  4.527811e+00  2.793381e+01\n##  91: TCGA-E9-A5FL-01A-11D-A27P-09  9.051438e+01  1.322275e+01  2.905100e+01\n##  92: TCGA-EW-A1PA-01A-11D-A142-09  1.887140e+01  1.923060e+01  4.231605e+00\n##  93: TCGA-EW-A1PH-01A-11D-A14K-09  2.347811e+01  3.271478e+01  8.143171e+00\n##  94: TCGA-GM-A2DB-01A-31D-A19Y-09  8.399491e+01  3.122550e+01  1.350770e+01\n##  95: TCGA-LD-A9QF-01A-32D-A41F-09  1.456385e+01  2.328753e+01  1.357230e+00\n##  96: TCGA-LL-A5YP-01A-21D-A28B-09  7.878814e+01  6.897847e+00  2.056396e+01\n##  97: TCGA-LL-A73Z-01A-11D-A32I-09  2.436630e+01  2.686392e+01  2.538904e+00\n##  98: TCGA-OL-A5RY-01A-21D-A28B-09  7.360216e+00  7.184128e+00  1.360407e+00\n##  99: TCGA-PE-A5DD-01A-12D-A27P-09  3.562644e+00  3.773066e+01  4.313237e+01\n## 100: TCGA-S3-AA17-01A-11D-A41F-09  9.349168e+01  2.892403e+01  2.042929e+01\n##                            sample          Sig1          Sig2          Sig3"},{"path":"target-vis.html","id":"signature-profile","chapter":"5 Target visualization","heading":"5.2.2 Signature profile","text":"signature composed distinct component patterns. can shown show_sig_profile(). note, different types signature, bar heights may different meanings.SBS signatures displayed based observed component frequency human genome, .e., representing relative proportions mutations generated signature based actual trinucleotide frequencies reference human genome.Similar SBS signatures, copy number signatures displayed based observed component frequency human genome. note, considering count process feature relatively independent, profile row normalized feature, unlike Macintyre et al. (2018) column normalization (method easy mislead readers), bar height can compared within/features.","code":""},{"path":"target-vis.html","id":"sbs-signature-profile","chapter":"5 Target visualization","heading":"5.2.3 SBS signature profile","text":"","code":"\nshow_sig_profile(mt_sig, mode = \"SBS\", paint_axis_text = FALSE, x_label_angle = 90)\nshow_sig_profile(mt_sig, mode = \"SBS\", style = \"cosmic\", x_label_angle = 90)"},{"path":"target-vis.html","id":"copy-number-signature-profile","chapter":"5 Target visualization","heading":"5.2.4 Copy number signature profile","text":"copy number signatures tally method “W”, specify normalize option “feature”, bar heights can clearly compared.","code":"\nshow_sig_profile(sig_w,\n  mode = \"copynumber\",\n  normalize = \"feature\",\n  method = \"W\",\n  style = \"cosmic\"\n)"},{"path":"target-vis.html","id":"cosmic-signature-profile","chapter":"5 Target visualization","heading":"5.2.5 COSMIC signature profile","text":"Users can show profile COSMIC signatures show_cosmic_sig_profile().see valid signature numbers, run‘legacy’ COSMIC v2.show plot, specify signature shortnames sig_index option.","code":"\nshow_cosmic_sig_profile(sig_db = \"legacy\")\n## \n## Valid index for db 'legacy':\n## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\nshow_cosmic_sig_profile(sig_db = \"SBS\")\n## \n## Valid index for db 'SBS':\n## 1 2 3 4 5 6 7a 7b 7c 7d 8 9 10a 10b 11 12 13 14 15 16 17a 17b 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 84 85 86 87 88 89 90\nshow_cosmic_sig_profile(sig_index = c(1, 5, 6), style = \"cosmic\")\n## \n## Valid index for db 'legacy':\n## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\nshow_cosmic_sig_profile(sig_index = c(1, 2, 3), style = \"cosmic\", sig_db = \"DBS\")\n## \n## Valid index for db 'DBS':\n## 1 2 3 4 5 6 7 8 9 10 11\nshow_cosmic_sig_profile(sig_index = c(4, 5, 6), style = \"cosmic\", sig_db = \"ID\")\n## \n## Valid index for db 'ID':\n## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18"},{"path":"target-vis.html","id":"exposure-activity-profile","chapter":"5 Target visualization","heading":"5.2.6 Exposure (activity) profile","text":"can put group labels exposure profile.note:COSMIC signatures, absolute exposure estimated mutation counts.copy number signatures, absolute exposure estimated copy number segments.","code":"\nshow_sig_exposure(mt_sig)\nshow_sig_exposure(mt_sig, style = \"cosmic\")\nshow_sig_exposure(sig_w, style = \"cosmic\")\ngrp <- get_groups(sig_w)\n## ℹ [2022-08-29 11:59:51]: Started.\n## ✔ [2022-08-29 11:59:51]: 'Signature' object detected.\n## ℹ [2022-08-29 11:59:51]: Obtaining clusters from the hierarchical clustering of the consensus matrix...\n## ℹ [2022-08-29 11:59:51]: Finding the dominant signature of each group...\n## => Generating a table of group and dominant signature:\n##    \n##     Sig1 Sig2\n##   1    0    2\n##   2    8    0\n## => Assigning a group to a signature with the maxium fraction (stored in 'map_table' attr)...\n## ℹ [2022-08-29 11:59:51]: Summarizing...\n##  group #1: 2 samples with Sig2 enriched.\n##  group #2: 8 samples with Sig1 enriched.\n## ! [2022-08-29 11:59:51]: The 'enrich_sig' column is set to dominant signature in one group, please check and make it consistent with biological meaning (correct it by hand if necessary).\n## ℹ [2022-08-29 11:59:51]: 0.097 secs elapsed.\ngrp_label <- grp$group\nnames(grp_label) <- grp$sample\nshow_sig_exposure(sig_w, style = \"cosmic\", groups = grp_label)"},{"path":"target-vis.html","id":"consensus-map","chapter":"5 Target visualization","heading":"5.2.7 Consensus map","text":"can support result sig_extract() multiple runs.","code":"\nshow_sig_consensusmap(mt_sig)"},{"path":"target-vis.html","id":"catalogue-profile","chapter":"5 Target visualization","heading":"5.2.8 Catalogue profile","text":"Based plot method signature, can plot raw catalog profile.default, function sums samples. Users can specify sample ID.","code":"\nshow_catalogue(t(mt_tally$nmf_matrix), style = \"cosmic\", x_label_angle = 90)\nshow_catalogue(t(mt_tally$nmf_matrix), style = \"cosmic\", samples = \"TCGA-E9-A22E-01A-11D-A159-09\", x_label_angle = 90)"},{"path":"universal-analysis.html","id":"universal-analysis","chapter":"6 Universal analysis","heading":"6 Universal analysis","text":"","code":""},{"path":"universal-analysis.html","id":"association-analysis-and-visualization","chapter":"6 Universal analysis","heading":"6.1 Association analysis and visualization","text":"","code":""},{"path":"universal-analysis.html","id":"general-numeric-association","chapter":"6 Universal analysis","heading":"6.1.1 General numeric association","text":"general numeric association, can use show_cor() function.","code":"\ndata(\"mtcars\")\np1 <- show_cor(mtcars)\np2 <- show_cor(mtcars,\n  x_vars = colnames(mtcars)[1:4],\n  y_vars = colnames(mtcars)[5:8]\n)\np3 <- show_cor(mtcars, vis_method = \"circle\", p_adj = \"fdr\")\np1\np1$cor\n## $cor_mat\n##        mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n## mpg   1.00 -0.91 -0.91 -0.89  0.65 -0.89  0.47  0.71  0.56  0.54 -0.66\n## cyl  -0.91  1.00  0.93  0.90 -0.68  0.86 -0.57 -0.81 -0.52 -0.56  0.58\n## disp -0.91  0.93  1.00  0.85 -0.68  0.90 -0.46 -0.72 -0.62 -0.59  0.54\n## hp   -0.89  0.90  0.85  1.00 -0.52  0.77 -0.67 -0.75 -0.36 -0.33  0.73\n## drat  0.65 -0.68 -0.68 -0.52  1.00 -0.75  0.09  0.45  0.69  0.74 -0.13\n## wt   -0.89  0.86  0.90  0.77 -0.75  1.00 -0.23 -0.59 -0.74 -0.68  0.50\n## qsec  0.47 -0.57 -0.46 -0.67  0.09 -0.23  1.00  0.79 -0.20 -0.15 -0.66\n## vs    0.71 -0.81 -0.72 -0.75  0.45 -0.59  0.79  1.00  0.17  0.28 -0.63\n## am    0.56 -0.52 -0.62 -0.36  0.69 -0.74 -0.20  0.17  1.00  0.81 -0.06\n## gear  0.54 -0.56 -0.59 -0.33  0.74 -0.68 -0.15  0.28  0.81  1.00  0.11\n## carb -0.66  0.58  0.54  0.73 -0.13  0.50 -0.66 -0.63 -0.06  0.11  1.00\n## \n## $p_mat\n##               mpg          cyl         disp           hp         drat\n## mpg  0.000000e+00 6.112687e-10 9.380327e-10 1.787835e-07 1.776240e-05\n## cyl  6.112687e-10 0.000000e+00 1.802838e-12 3.477861e-09 8.244636e-06\n## disp 9.380327e-10 1.802838e-12 0.000000e+00 7.142679e-08 5.282022e-06\n## hp   1.787835e-07 3.477861e-09 7.142679e-08 0.000000e+00 9.988772e-03\n## drat 1.776240e-05 8.244636e-06 5.282022e-06 9.988772e-03 0.000000e+00\n## wt   1.293959e-10 1.217567e-07 1.222320e-11 4.145827e-05 4.784260e-06\n## qsec 1.708199e-02 3.660533e-04 1.314404e-02 5.766253e-06 6.195826e-01\n## vs   3.415937e-05 1.843018e-08 5.235012e-06 2.940896e-06 1.167553e-02\n## am   2.850207e-04 2.151207e-03 3.662114e-04 1.798309e-01 4.726790e-06\n## gear 5.400948e-03 4.173297e-03 9.635921e-04 4.930119e-01 8.360110e-06\n## carb 1.084446e-03 1.942340e-03 2.526789e-02 7.827810e-07 6.211834e-01\n##                wt         qsec           vs           am         gear\n## mpg  1.293959e-10 1.708199e-02 3.415937e-05 2.850207e-04 5.400948e-03\n## cyl  1.217567e-07 3.660533e-04 1.843018e-08 2.151207e-03 4.173297e-03\n## disp 1.222320e-11 1.314404e-02 5.235012e-06 3.662114e-04 9.635921e-04\n## hp   4.145827e-05 5.766253e-06 2.940896e-06 1.798309e-01 4.930119e-01\n## drat 4.784260e-06 6.195826e-01 1.167553e-02 4.726790e-06 8.360110e-06\n## wt   0.000000e+00 3.388683e-01 9.798492e-04 1.125440e-05 4.586601e-04\n## qsec 3.388683e-01 0.000000e+00 1.029669e-06 2.056621e-01 2.425344e-01\n## vs   9.798492e-04 1.029669e-06 0.000000e+00 3.570439e-01 2.579439e-01\n## am   1.125440e-05 2.056621e-01 3.570439e-01 0.000000e+00 5.834043e-08\n## gear 4.586601e-04 2.425344e-01 2.579439e-01 5.834043e-08 0.000000e+00\n## carb 1.463861e-02 4.536949e-05 6.670496e-04 7.544526e-01 1.290291e-01\n##              carb\n## mpg  1.084446e-03\n## cyl  1.942340e-03\n## disp 2.526789e-02\n## hp   7.827810e-07\n## drat 6.211834e-01\n## wt   1.463861e-02\n## qsec 4.536949e-05\n## vs   6.670496e-04\n## am   7.544526e-01\n## gear 1.290291e-01\n## carb 0.000000e+00\np2\np3"},{"path":"universal-analysis.html","id":"comprehensive-association","chapter":"6 Universal analysis","heading":"6.1.2 Comprehensive association","text":"comprehensive association analysis including continuous categorical variables,\nseveral functions available sigminer:get_sig_feature_association().get_tidy_association().show_sig_feature_corrplot().Currently, haven’t provided proper example dataset showing usage functions (please read documentation), tidy dataset study (Wang et al. 2021) given show plot function.","code":"\n# The data is generated from Wang, Shixiang et al.\nload(system.file(\"extdata\", \"asso_data.RData\",\n  package = \"sigminer\", mustWork = TRUE\n))\np <- show_sig_feature_corrplot(tidy_data.seqz.feature, p_val = 0.05)\np"},{"path":"universal-analysis.html","id":"group-analysis-and-visualization","chapter":"6 Universal analysis","heading":"6.2 Group Analysis and Visualization","text":"Group analysis common task cancer study. Sigminer supports dividing samples multiple groups comparing genotype/phenotype feature measures.","code":""},{"path":"universal-analysis.html","id":"group-generation","chapter":"6 Universal analysis","heading":"6.2.1 Group Generation","text":"multiple methods generate groups, including ‘consensus’ (default, can used result sig_extract()), ‘k-means’ etc. determining groups, sigminer assign group signature maximum fraction. may say group Sig_x enriched.returned sample orders match sample orders clustered consensus matrix.Sometimes, mapping groups enriched signatures may right. Users check even correct manually.","code":"data(\"simulated_catalogs\")\nmt_sig <- sig_extract(t(simulated_catalogs$set1), n_sig = 10, nrun = 3)\n## NMF algorithm: 'brunet'\n## Multiple runs: 3\n## Mode: sequential [foreach:doParallelMC]\n## \nRuns: |                                                        \nRuns: |                                                  |   0%\nRuns: |                                                        \nRuns: |============                                      |  25%\nRuns: |                                                        \nRuns: |=========================                         |  50%\nRuns: |                                                        \nRuns: |======================================            |  75%\nRuns: |                                                        \nRuns: |==================================================| 100%\n## System time:\n##    user  system elapsed \n##   5.108   0.031   5.148\nmt_grps <- get_groups(mt_sig, method = \"consensus\", match_consensus = TRUE)\n## ℹ [2022-08-29 12:00:04]: Started.\n## ✔ [2022-08-29 12:00:04]: 'Signature' object detected.\n## ℹ [2022-08-29 12:00:04]: Obtaining clusters from the hierarchical clustering of the consensus matrix...\n## ℹ [2022-08-29 12:00:04]: Finding the dominant signature of each group...\n## => Generating a table of group and dominant signature:\n##     \n##      Sig1 Sig10 Sig2 Sig3 Sig4 Sig5 Sig7 Sig8 Sig9\n##   1     0     2    0    2    0    0    0    0    0\n##   10    1     0    0    1    0    4    0    0    0\n##   2     0     0    1    0    0    0    0    0    0\n##   3     1     0    0    0    0    0    0    0    0\n##   4     1     0    1    0    2    0    0    0    0\n##   5     0     0    0    0    0    0    0    1    0\n##   6     1     0    1    0    0    0    2    0    0\n##   7     0     0    0    0    0    0    0    0    3\n##   8     0     0    1    4    0    0    0    0    0\n##   9     1     0    0    0    0    0    0    0    0\n## => Assigning a group to a signature with the maxium fraction (stored in 'map_table' attr)...\n## ℹ [2022-08-29 12:00:05]: Summarizing...\n##  group #1: 4 samples with Sig10 enriched.\n##  group #10: 6 samples with Sig5 enriched.\n##  group #2: 1 samples with Sig2 enriched.\n##  group #3: 1 samples with Sig1 enriched.\n##  group #4: 4 samples with Sig4 enriched.\n##  group #5: 1 samples with Sig8 enriched.\n##  group #6: 4 samples with Sig7 enriched.\n##  group #7: 3 samples with Sig9 enriched.\n##  group #8: 5 samples with Sig3 enriched.\n##  group #9: 1 samples with Sig1 enriched.\n## ! [2022-08-29 12:00:05]: The 'enrich_sig' column is set to dominant signature in one group, please check and make it consistent with biological meaning (correct it by hand if necessary).\n## ℹ [2022-08-29 12:00:05]: 0.072 secs elapsed.\nhead(mt_grps)\n##       sample group silhouette_width enrich_sig\n## 1: Sample_14     1         6.67e-01      Sig10\n## 2:  Sample_6     1         0.00e+00      Sig10\n## 3:  Sample_2     1         1.00e+00      Sig10\n## 4:  Sample_5     1         0.00e+00      Sig10\n## 5: Sample_22     2         1.00e+00       Sig2\n## 6: Sample_12     3         1.67e-16       Sig1\nshow_sig_consensusmap(mt_sig)\nattr(mt_grps, \"map_table\")\n##     \n##      Sig1 Sig10 Sig2 Sig3 Sig4 Sig5 Sig7 Sig8 Sig9\n##   1     0     2    0    2    0    0    0    0    0\n##   10    1     0    0    1    0    4    0    0    0\n##   2     0     0    1    0    0    0    0    0    0\n##   3     1     0    0    0    0    0    0    0    0\n##   4     1     0    1    0    2    0    0    0    0\n##   5     0     0    0    0    0    0    0    1    0\n##   6     1     0    1    0    0    0    2    0    0\n##   7     0     0    0    0    0    0    0    0    3\n##   8     0     0    1    4    0    0    0    0    0\n##   9     1     0    0    0    0    0    0    0    0"},{"path":"universal-analysis.html","id":"group-comparison-analysis","chapter":"6 Universal analysis","heading":"6.2.2 Group Comparison Analysis","text":"","code":"\nload(system.file(\"extdata\", \"toy_copynumber_signature_by_W.RData\",\n  package = \"sigminer\", mustWork = TRUE\n))\n# Assign samples to clusters\ngroups <- get_groups(sig, method = \"k-means\")\n## ℹ [2022-08-29 12:00:05]: Started.\n## ✔ [2022-08-29 12:00:05]: 'Signature' object detected.\n## ℹ [2022-08-29 12:00:05]: Running k-means with 2 clusters...\n## ℹ [2022-08-29 12:00:05]: Generating a table of group and signature contribution (stored in 'map_table' attr):\n##        Sig1      Sig2\n## 1 0.2097559 0.7901116\n## 2 0.8964984 0.1035016\n## ℹ [2022-08-29 12:00:05]: Assigning a group to a signature with the maximum fraction...\n## ℹ [2022-08-29 12:00:05]: Summarizing...\n##  group #1: 2 samples with Sig2 enriched.\n##  group #2: 8 samples with Sig1 enriched.\n## ! [2022-08-29 12:00:05]: The 'enrich_sig' column is set to dominant signature in one group, please check and make it consistent with biological meaning (correct it by hand if necessary).\n## ℹ [2022-08-29 12:00:05]: 0.031 secs elapsed.\nset.seed(1234)\ngroups$prob <- rnorm(10)\ngroups$new_group <- sample(c(\"1\", \"2\", \"3\", \"4\", NA), size = nrow(groups), replace = TRUE)\n# Compare groups (filter NAs for categorical coloumns)\ngroups.cmp <- get_group_comparison(groups[, -1],\n  col_group = \"group\",\n  cols_to_compare = c(\"prob\", \"new_group\"),\n  type = c(\"co\", \"ca\"), verbose = TRUE\n)\n## Treat prob as continuous variable.\n## Treat new_group as categorical variable.\n# Compare groups (Set NAs of categorical columns to 'Rest')\ngroups.cmp2 <- get_group_comparison(groups[, -1],\n  col_group = \"group\",\n  cols_to_compare = c(\"prob\", \"new_group\"),\n  type = c(\"co\", \"ca\"), NAs = \"Rest\", verbose = TRUE\n)\n## Treat prob as continuous variable.\n## Treat new_group as categorical variable."},{"path":"universal-analysis.html","id":"group-visualization","chapter":"6 Universal analysis","heading":"6.2.3 Group Visualization","text":"","code":"\nggcomp <- show_group_comparison(groups.cmp2)\nggcomp$co_comb\nggcomp$ca_comb"},{"path":"subtype-prediction.html","id":"subtype-prediction","chapter":"7 Subtype prediction","heading":"7 Subtype prediction","text":"expand power signatures clinical application, based signature activity, can go build neutral network model prediction model keras. feature implemented sigminer’s child package sigminer.prediction.studying copy number signatures prostate cancer, can directly use trained model, usage described \nREADME file.situations, can reuse functions modeling_and_fitting()\nbatch_modeling_and_fitting() (batch processing) building models.","code":""},{"path":"sigflow.html","id":"sigflow","chapter":"8 Sigflow pipeline","heading":"8 Sigflow pipeline","text":"Sigflow provides useful mutational signature analysis workflows based R package sigminer. can auto-extract mutational signatures, fit mutation data COSMIC reference signatures (SBS/DBS/INDEL) run bootstrapping analysis signature fitting.full documentation, please read Sigflow README.","code":""},{"path":"sigflow.html","id":"cancer-type-specific-signature-index-database","chapter":"8 Sigflow pipeline","heading":"8.1 Cancer type specific signature index database","text":"Signature fitting analysis may befit directly specifying known signatures identified cancer type. collect information provide following data tables.Note, set sig_db ‘legacy’ (default) sig_fit() family functions.","code":"\ndb1 <- system.file(\"extdata\", \"cosmic2_record_by_cancer.rds\", package = \"sigminer\")\ndb1 <- readRDS(db1)\ncolnames(db1) <- c(\"Cancer type\", \"Signature Index\")\ndb2 <- system.file(\"extdata\", \"signature_record_by_cancer.rds\", package = \"sigminer\")\ndb2 <- readRDS(db2)\ncolnames(db2) <- c(\n  \"Cancer type\", \"Cohort\", \"Sequencing strategy\",\n  \"SBS signature index\",\n  \"DBS signature index\",\n  \"ID signature index\"\n)\nDT::datatable(db1, caption = \"Data source: https://cancer.sanger.ac.uk/signatures_v2/matrix.png\")\nDT::datatable(db2[, c(1:3, 4)], caption = \"Data source: Alexandrov et al. https://www.nature.com/articles/s41586-020-1943-3\")\nDT::datatable(db2[, c(1:3, 5)], caption = \"Data source: Alexandrov et al. https://www.nature.com/articles/s41586-020-1943-3\")\nDT::datatable(db2[, c(1:3, 6)], caption = \"Data source: Alexandrov et al. https://www.nature.com/articles/s41586-020-1943-3\")"},{"path":"datasets.html","id":"datasets","chapter":"9 Datasets","heading":"9 Datasets","text":"","code":""},{"path":"datasets.html","id":"reference-annotation","chapter":"9 Datasets","heading":"9.1 Reference annotation","text":"sigminer stores many reference annotation datasets internal calculation. can exported usage either data() get_genome_annotation().Currently, following datasets:centromeres.hg19centromeres.hg38chromsize.hg19chromsize.hg38cytobands.hg19cytobands.hg38An example given :get_genome_annotation() can better control returned data.frame.see ?get_genome_annotation.","code":"\ndata(\"centromeres.hg19\")\nhead(centromeres.hg19)\n##   chrom left.base right.base\n## 1  chr1 121535434  124535434\n## 2  chr2  92326171   95326171\n## 3  chr3  90504854   93504854\n## 4  chr4  49660117   52660117\n## 5  chr5  46405641   49405641\n## 6  chr6  58830166   61830166\nget_genome_annotation(\n  data_type = \"chr_size\",\n  chrs = c(\"chr1\", \"chr10\", \"chr20\"),\n  genome_build = \"hg19\"\n)\n##   chrom      size\n## 1  chr1 249250621\n## 2 chr10 135534747\n## 3 chr20  63025520"},{"path":"datasets.html","id":"copy-number-components-setting","chapter":"9 Datasets","heading":"9.2 Copy number components setting","text":"Dataset CN.features predefined component data table identifying copy number signatures method “Wang”.\nUsers can define custom table similar structure pass function like sig_tally().Detail generate dataset can viewed https://github.com/ShixiangWang/sigminer/blob/master/data-raw/CN-features.R.","code":"\nCN.features\n##     feature         component label  min max\n##  1:  BP10MB         BP10MB[0] point    0   0\n##  2:  BP10MB         BP10MB[1] point    1   1\n##  3:  BP10MB         BP10MB[2] point    2   2\n##  4:  BP10MB         BP10MB[3] point    3   3\n##  5:  BP10MB         BP10MB[4] point    4   4\n##  6:  BP10MB         BP10MB[5] point    5   5\n##  7:  BP10MB        BP10MB[>5] range    5 Inf\n##  8:   BPArm          BPArm[0] point    0   0\n##  9:   BPArm          BPArm[1] point    1   1\n## 10:   BPArm          BPArm[2] point    2   2\n## 11:   BPArm          BPArm[3] point    3   3\n## 12:   BPArm          BPArm[4] point    4   4\n## 13:   BPArm          BPArm[5] point    5   5\n## 14:   BPArm          BPArm[6] point    6   6\n## 15:   BPArm          BPArm[7] point    7   7\n## 16:   BPArm          BPArm[8] point    8   8\n## 17:   BPArm          BPArm[9] point    9   9\n## 18:   BPArm         BPArm[10] point   10  10\n## 19:   BPArm BPArm[>10 & <=20] range   10  20\n## 20:   BPArm BPArm[>20 & <=30] range   20  30\n## 21:   BPArm        BPArm[>30] range   30 Inf\n## 22:      CN             CN[0] point    0   0\n## 23:      CN             CN[1] point    1   1\n## 24:      CN             CN[2] point    2   2\n## 25:      CN             CN[3] point    3   3\n## 26:      CN             CN[4] point    4   4\n## 27:      CN      CN[>4 & <=8] range    4   8\n## 28:      CN            CN[>8] range    8 Inf\n## 29:    CNCP           CNCP[0] point    0   0\n## 30:    CNCP           CNCP[1] point    1   1\n## 31:    CNCP           CNCP[2] point    2   2\n## 32:    CNCP           CNCP[3] point    3   3\n## 33:    CNCP           CNCP[4] point    4   4\n## 34:    CNCP    CNCP[>4 & <=8] range    4   8\n## 35:    CNCP          CNCP[>8] range    8 Inf\n## 36:    OsCN           OsCN[0] point    0   0\n## 37:    OsCN           OsCN[1] point    1   1\n## 38:    OsCN           OsCN[2] point    2   2\n## 39:    OsCN           OsCN[3] point    3   3\n## 40:    OsCN           OsCN[4] point    4   4\n## 41:    OsCN   OsCN[>4 & <=10] range    4  10\n## 42:    OsCN         OsCN[>10] range   10 Inf\n## 43:      SS           SS[<=2] range -Inf   2\n## 44:      SS      SS[>2 & <=3] range    2   3\n## 45:      SS      SS[>3 & <=4] range    3   4\n## 46:      SS      SS[>4 & <=5] range    4   5\n## 47:      SS      SS[>5 & <=6] range    5   6\n## 48:      SS      SS[>6 & <=7] range    6   7\n## 49:      SS      SS[>7 & <=8] range    7   8\n## 50:      SS            SS[>8] range    8 Inf\n## 51:    NC50         NC50[<=2] range -Inf   2\n## 52:    NC50           NC50[3] point    3   3\n## 53:    NC50           NC50[4] point    4   4\n## 54:    NC50           NC50[5] point    5   5\n## 55:    NC50           NC50[6] point    6   6\n## 56:    NC50           NC50[7] point    7   7\n## 57:    NC50          NC50[>7] range    7 Inf\n## 58:   BoChr          BoChr[1] point    1   1\n## 59:   BoChr          BoChr[2] point    2   2\n## 60:   BoChr          BoChr[3] point    3   3\n## 61:   BoChr          BoChr[4] point    4   4\n## 62:   BoChr          BoChr[5] point    5   5\n## 63:   BoChr          BoChr[6] point    6   6\n## 64:   BoChr          BoChr[7] point    7   7\n## 65:   BoChr          BoChr[8] point    8   8\n## 66:   BoChr          BoChr[9] point    9   9\n## 67:   BoChr         BoChr[10] point   10  10\n## 68:   BoChr         BoChr[11] point   11  11\n## 69:   BoChr         BoChr[12] point   12  12\n## 70:   BoChr         BoChr[13] point   13  13\n## 71:   BoChr         BoChr[14] point   14  14\n## 72:   BoChr         BoChr[15] point   15  15\n## 73:   BoChr         BoChr[16] point   16  16\n## 74:   BoChr         BoChr[17] point   17  17\n## 75:   BoChr         BoChr[18] point   18  18\n## 76:   BoChr         BoChr[19] point   19  19\n## 77:   BoChr         BoChr[20] point   20  20\n## 78:   BoChr         BoChr[21] point   21  21\n## 79:   BoChr         BoChr[22] point   22  22\n## 80:   BoChr         BoChr[23] point   23  23\n##     feature         component label  min max"},{"path":"convert.html","id":"convert","chapter":"10 SBS signature conversion","heading":"10 SBS signature conversion","text":"Converts signatures two representations relative different sets mutational opportunities. Currently, SBS signature supported.","code":"\n# Load SBS signature\nload(system.file(\"extdata\", \"toy_mutational_signature.RData\",\n  package = \"sigminer\", mustWork = TRUE\n))\n# Exome-relative to Genome-relative\nsig_converted <- sig_convert(sig2,\n  from = \"human-exome\",\n  to = \"human-genome\"\n)\nsig_converted\n##                  Sig1          Sig2          Sig3\n## A[C>A]A  0.000000e+00  1.283652e-02 2.354578e-204\n## A[C>A]C  0.000000e+00  1.866572e-02  0.000000e+00\n## A[C>A]G  0.000000e+00  1.618700e-03  0.000000e+00\n## A[C>A]T  0.000000e+00  7.572233e-03  0.000000e+00\n## C[C>A]A  0.000000e+00  1.209076e-02  0.000000e+00\n## C[C>A]C  0.000000e+00  7.032249e-03 1.170400e-133\n## C[C>A]G  0.000000e+00  3.839313e-03 1.165310e-269\n## C[C>A]T  0.000000e+00  1.166974e-02  0.000000e+00\n## G[C>A]A  0.000000e+00  1.025669e-02  4.089543e-15\n## G[C>A]C 2.975389e-296  4.002311e-03  0.000000e+00\n## G[C>A]G  4.796114e-02 4.527374e-117  0.000000e+00\n## G[C>A]T  0.000000e+00  5.994876e-03 1.669814e-131\n## T[C>A]A  0.000000e+00  3.324941e-96  7.673114e-02\n## T[C>A]C  0.000000e+00  1.467589e-02 9.720402e-229\n## T[C>A]G  0.000000e+00  3.199454e-03  0.000000e+00\n## T[C>A]T  0.000000e+00  2.338506e-02  0.000000e+00\n## A[C>G]A  0.000000e+00  1.198076e-02 1.210238e-153\n## A[C>G]C  0.000000e+00  3.999796e-03  0.000000e+00\n## A[C>G]G  9.976549e-02  7.184837e-58  0.000000e+00\n## A[C>G]T  0.000000e+00  7.572233e-03 9.731662e-108\n## C[C>G]A  0.000000e+00  8.732217e-03  1.472610e-34\n## C[C>G]C  0.000000e+00  1.875266e-03  0.000000e+00\n## C[C>G]G  0.000000e+00  4.429976e-03  1.144811e-70\n## C[C>G]T  1.398527e-01  1.003533e-19  0.000000e+00\n## G[C>G]A 1.227107e-293  7.521572e-03 2.969058e-285\n## G[C>G]C  0.000000e+00  3.001734e-03 2.665595e-168\n## G[C>G]G  0.000000e+00  2.178881e-03  0.000000e+00\n## G[C>G]T  0.000000e+00  3.996584e-03  0.000000e+00\n## T[C>G]A  0.000000e+00  4.493267e-03 2.338585e-311\n## T[C>G]C  0.000000e+00  5.336688e-03 1.100445e-248\n## T[C>G]G  0.000000e+00  5.027714e-03 2.505791e-283\n## T[C>G]T  0.000000e+00  8.094828e-03  4.211703e-12\n## A[C>T]A  0.000000e+00  4.278842e-02 6.186711e-285\n## A[C>T]C  0.000000e+00  3.266500e-02 4.009287e-180\n## A[C>T]G  0.000000e+00  8.943317e-02 1.936180e-271\n## A[C>T]T  0.000000e+00  2.366323e-02  0.000000e+00\n## C[C>T]A  0.000000e+00  2.552494e-02  0.000000e+00\n## C[C>T]C  0.000000e+00  1.406450e-02 1.334078e-226\n## C[C>T]G  0.000000e+00  5.463637e-02 9.737288e-158\n## C[C>T]T  0.000000e+00  3.695418e-02 4.246509e-172\n## G[C>T]A  0.000000e+00 1.550033e-134  1.379990e-01\n## G[C>T]C  0.000000e+00  2.401387e-02 9.655208e-197\n## G[C>T]G  0.000000e+00  5.665090e-02 1.322415e-193\n## G[C>T]T  0.000000e+00  3.197267e-02 1.483309e-124\n## T[C>T]A  0.000000e+00  3.504749e-02 1.602583e-125\n## T[C>T]C  0.000000e+00  2.868470e-02 2.192251e-133\n## T[C>T]G  0.000000e+00  5.607061e-45  3.725237e-01\n## T[C>T]T  0.000000e+00  2.248563e-02 5.991874e-150\n## A[T>A]A  0.000000e+00 8.169022e-163 4.909543e-207\n## A[T>A]C  0.000000e+00  9.451235e-03 9.169290e-161\n## A[T>A]G  0.000000e+00 1.860257e-209  3.781700e-02\n## A[T>A]T  0.000000e+00  3.646724e-03  0.000000e+00\n## C[T>A]A  0.000000e+00  9.626354e-63 1.877035e-152\n## C[T>A]C  0.000000e+00  4.098575e-03  8.954807e-03\n## C[T>A]G  0.000000e+00  7.584736e-03  1.779246e-46\n## C[T>A]T  0.000000e+00  4.886651e-03  0.000000e+00\n## G[T>A]A  0.000000e+00 1.923466e-257  1.645056e-02\n## G[T>A]C  0.000000e+00  5.990275e-03 2.816093e-138\n## G[T>A]G  0.000000e+00  2.491146e-03 5.966918e-137\n## G[T>A]T  1.780073e-01 1.470587e-107  0.000000e+00\n## T[T>A]A  0.000000e+00  0.000000e+00  1.576605e-78\n## T[T>A]C  0.000000e+00 3.652510e-193  3.025830e-02\n## T[T>A]G  0.000000e+00  0.000000e+00  3.102984e-02\n## T[T>A]T  0.000000e+00  5.570191e-03 2.661350e-186\n## A[T>C]A  0.000000e+00  3.673499e-02 2.037390e-236\n## A[T>C]C  0.000000e+00  4.875997e-80  8.069896e-02\n## A[T>C]G  0.000000e+00  2.533400e-02 4.653276e-300\n## A[T>C]T  0.000000e+00  3.403610e-02 1.137147e-235\n## C[T>C]A  0.000000e+00  7.619558e-03  1.273356e-94\n## C[T>C]C  0.000000e+00  1.116095e-02 1.501723e-122\n## C[T>C]G  0.000000e+00  9.506418e-50  9.321794e-02\n## C[T>C]T  0.000000e+00  1.172796e-02  1.679251e-87\n## G[T>C]A  0.000000e+00  4.585040e-03  5.536247e-03\n## G[T>C]C  0.000000e+00 5.073564e-255  4.133148e-02\n## G[T>C]G  0.000000e+00  6.850650e-03  0.000000e+00\n## G[T>C]T  3.036787e-50  1.058999e-02 7.624782e-161\n## T[T>C]A  0.000000e+00 1.774320e-183  1.917769e-02\n## T[T>C]C 3.471970e-224  7.796288e-03  0.000000e+00\n## T[T>C]G  0.000000e+00  9.993850e-03  0.000000e+00\n## T[T>C]T  0.000000e+00  2.116673e-02 4.729625e-249\n## A[T>G]A  0.000000e+00  6.559820e-03  0.000000e+00\n## A[T>G]C  0.000000e+00 8.576821e-159  1.467254e-02\n## A[T>G]G  0.000000e+00  1.544237e-03  3.140069e-03\n## A[T>G]T  0.000000e+00  3.646724e-03  0.000000e+00\n## C[T>G]A  0.000000e+00  1.088508e-03  0.000000e+00\n## C[T>G]C  0.000000e+00  5.252213e-03 5.352907e-111\n## C[T>G]G  0.000000e+00  6.320613e-03  0.000000e+00\n## C[T>G]T  1.505897e-01  2.544085e-94 2.345935e-218\n## G[T>G]A  9.796461e-02  2.199487e-93 1.446688e-154\n## G[T>G]C  0.000000e+00  1.996758e-03  0.000000e+00\n## G[T>G]G  0.000000e+00  3.736718e-03  0.000000e+00\n## G[T>G]T  0.000000e+00  3.701349e-72  1.494581e-02\n## T[T>G]A  1.142049e-01 5.198170e-158  0.000000e+00\n## T[T>G]C  0.000000e+00  4.872680e-03  0.000000e+00\n## T[T>G]G  0.000000e+00  1.798724e-19  1.551492e-02\n## T[T>G]T  1.716541e-01  1.775134e-54  0.000000e+00\nshow_sig_profile(sig2, style = \"cosmic\")\nshow_sig_profile(sig_converted, style = \"cosmic\")"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
